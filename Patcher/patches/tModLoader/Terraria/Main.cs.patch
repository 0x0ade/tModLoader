--- src/Terraria\Terraria\Main.cs
+++ src/tModLoader\Terraria\Main.cs
@@ -31,6 +31,7 @@
 using Terraria.Initializers;
 using Terraria.IO;
 using Terraria.Map;
+using Terraria.ModLoader;
 using Terraria.Net;
 using Terraria.ObjectData;
 using Terraria.Social;
@@ -39,17 +40,9 @@
 using Terraria.Utilities;
 using Terraria.World.Generation;
 
-#if SERVER
-using Terraria.Server;
-#endif
 namespace Terraria
 {
-	#if CLIENT
 	public class Main : Game
-
-#else
-	public class Main : Terraria.Server.Game
-#endif
 	{
 		public delegate void OnPlayerSelected(PlayerFileData player);
 
@@ -1258,7 +1251,9 @@
 				Path.DirectorySeparatorChar,
 				"My Games",
 				Path.DirectorySeparatorChar,
-				"Terraria"
+				"Terraria",
+				Path.DirectorySeparatorChar,
+				"ModLoader"
 			});
 		public static string WorldPath = Main.SavePath + Path.DirectorySeparatorChar + "Worlds";
 		public static string CloudWorldPath = "worlds";
@@ -1921,7 +1916,7 @@
 		private int selectedMenu2 = -1;
 		public static int selectedPlayer = 0;
 		public static int selectedWorld = 0;
-		public static int menuMode = 0;
+		public static int menuMode = Interface.loadModsID;
 		public static int menuSkip = 0;
 		private static Item cpItem = new Item();
 		public int textBlinkerCount;
@@ -2479,13 +2474,11 @@
 			Main.mouseColor.R = Main.Configuration.Get<byte>("MouseColorR", Main.mouseColor.R);
 			Main.mouseColor.G = Main.Configuration.Get<byte>("MouseColorG", Main.mouseColor.G);
 			Main.mouseColor.B = Main.Configuration.Get<byte>("MouseColorB", Main.mouseColor.B);
-#if CLIENT
 			if (Main.screenMaximized)
 			{
 				Form form = (Form)Control.FromHandle(Main.instance.Window.Handle);
 				form.WindowState = FormWindowState.Maximized;
 			}
-#endif
 			Main.SetDisplayMode(preferredBackBufferWidth, preferredBackBufferHeight, fullscreen);
 			int num = 0;
 			Main.Configuration.Get<int>("LastLaunchedVersion", ref num);
@@ -2557,10 +2550,8 @@
 								}
 								if (num >= 91 && binaryReader.ReadBoolean())
 								{
-#if CLIENT
 									Form form = (Form)Control.FromHandle(base.Window.Handle);
 									form.WindowState = FormWindowState.Maximized;
-#endif
 								}
 								if (num >= 4)
 								{
@@ -3964,21 +3955,13 @@
 		public Main()
 		{
 			Main.instance = this;
-#if CLIENT
 			Main.graphics = new GraphicsDeviceManager((Game)this);
-#if DEBUG
-			base.Content.RootDirectory = Path.Combine(Directory.GetCurrentDirectory(), "Content");
-#else
 			base.Content.RootDirectory = "Content";
-#endif
-#endif
 		}
 
 		protected void SetTitle()
 		{
-#if CLIENT
 			base.Window.Title = Lang.title();
-#endif
 		}
 
 		public static void InitLifeBytes()
@@ -4034,9 +4017,6 @@
 
 		protected override void Initialize()
 		{
-#if SERVER
-			Main.netMode = 2;
-#endif
 			Main.LocalFavoriteData.Load();
 			Main.CloudFavoritesData.Load();
 			TileObjectData.Initialize();
@@ -4047,14 +4027,9 @@
 			ItemRarity.Initialize();
 			TileEntity.InitializeAll();
 			Main.InitializeItemAnimations();
-#if CLIENT
 			Lighting.Initialize(false);
 			MapHelper.Initialize();
 			TimeLogger.Initialize();
-#else
-			Mount.Initialize();
-			Minecart.Initialize();
-#endif
 			WorldGen.RandomizeBackgrounds();
 			WorldGen.RandomizeCaveBackgrounds();
 			WorldGen.RandomizeMoonState();
@@ -6388,20 +6363,17 @@
 				Main.ActivePlayerFileData.StartPlayTimer();
 				Player.EnterWorld(Main.player[Main.myPlayer]);
 			}
-#if CLIENT
 			else
 			{
 				IntPtr systemMenu = Main.GetSystemMenu(base.Window.Handle, false);
 				int menuItemCount = Main.GetMenuItemCount(systemMenu);
 				Main.RemoveMenu(systemMenu, menuItemCount - 1, 1024);
 			}
-#endif
 			if (Main.dedServ)
 			{
 				return;
 			}
 			Main.clientUUID = Guid.NewGuid().ToString();
-#if CLIENT
 			keyBoardInput.newKeyEvent += delegate(char keyStroke)
 			{
 				if (Main.keyCount < 10)
@@ -6411,7 +6383,6 @@
 					Main.keyCount++;
 				}
 			};
-#endif
 			base.Initialize();
 			base.Window.AllowUserResizing = true;
 			this.OpenSettings();
@@ -6438,14 +6409,12 @@
 			this.OpenRecent();
 			Star.SpawnStars();
 			WorldGen.RandomizeWeather();
-#if CLIENT
 			this._achievements = new AchievementManager();
 			AchievementInitializer.Load();
 			DyeInitializer.Load();
 			ScreenEffectInitializer.Load();
 			ChatInitializer.Load();
 			AchievementCompleteUI.Initialize();
-#endif
 			foreach (DisplayMode current in GraphicsAdapter.DefaultAdapter.SupportedDisplayModes)
 			{
 				if (current.Width >= Main.minScreenW && current.Height >= Main.minScreenH && current.Width <= Main.maxScreenW && current.Height <= Main.maxScreenH)
@@ -10593,12 +10562,22 @@
 
 		protected override void Update(GameTime gameTime)
 		{
-#if CLIENT
+			try
+			{
+				do_Update(gameTime);
+			}
+			catch (Exception e)
+			{
+				ErrorLogger.LogException(e);
+			}
+		}
+
+		protected void do_Update(GameTime gameTime)
+		{
 			if (Main.OnTick != null)
 			{
 				Main.OnTick();
 			}
-#endif
 			if (Main._largeMethodFix)
 			{
 				Main._largeMethodFix = false;
@@ -11272,6 +11251,7 @@
 						Main.wallFrameCounter[144] = 0;
 					}
 				}
+				WallLoader.AnimateWalls();
 				Main.tileFrameCounter[12]++;
 				if (Main.tileFrameCounter[12] > 5)
 				{
@@ -11747,6 +11727,7 @@
 						Main.tileFrame[410] = 0;
 					}
 				}
+				TileLoader.AnimateTiles();
 				Main.CritterCages();
 				Main.UpdateDrawAnimations();
 				if (Main.keyState.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.F10) && !Main.chatMode && !Main.editSign && !Main.editChest)
@@ -12696,7 +12677,6 @@
 
 		public static string GetInputText(string oldString)
 		{
-#if CLIENT
 			if (!Main.hasFocus)
 			{
 				return oldString;
@@ -12719,12 +12699,12 @@
 				else if (Main.inputText.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.X) && !Main.oldInputText.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.X))
 				{
 					Thread thread = new Thread((ThreadStart)delegate
-					{
-						if (oldString.Length > 0)
-						{
-							Clipboard.SetText(oldString);
-						}
-					});
+						{
+							if (oldString.Length > 0)
+							{
+								Clipboard.SetText(oldString);
+							}
+						});
 					thread.SetApartmentState(ApartmentState.STA);
 					thread.Start();
 					while (thread.IsAlive)
@@ -12735,12 +12715,12 @@
 				else if ((Main.inputText.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.C) && !Main.oldInputText.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.C)) || (Main.inputText.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.Insert) && !Main.oldInputText.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.Insert)))
 				{
 					Thread thread2 = new Thread((ThreadStart)delegate
-					{
-						if (oldString.Length > 0)
-						{
-							Clipboard.SetText(oldString);
-						}
-					});
+						{
+							if (oldString.Length > 0)
+							{
+								Clipboard.SetText(oldString);
+							}
+						});
 					thread2.SetApartmentState(ApartmentState.STA);
 					thread2.Start();
 					while (thread2.IsAlive)
@@ -12750,17 +12730,17 @@
 				else if (Main.inputText.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.V) && !Main.oldInputText.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.V))
 				{
 					Thread thread3 = new Thread((ThreadStart)delegate
-					{
-						string text2 = Clipboard.GetText();
-						for (int l = 0; l < text2.Length; l++)
-						{
-							if (text2[l] < ' ' || text2[l] == '\u007f')
-							{
-								text2 = text2.Replace(string.Concat(text2[l--]), "");
-							}
-						}
-						newKeys += text2;
-					});
+						{
+							string text2 = Clipboard.GetText();
+							for (int l = 0; l < text2.Length; l++)
+							{
+								if (text2[l] < ' ' || text2[l] == '\u007f')
+								{
+									text2 = text2.Replace(string.Concat(text2[l--]), "");
+								}
+							}
+							newKeys += text2;
+						});
 					thread3.SetApartmentState(ApartmentState.STA);
 					thread3.Start();
 					while (thread3.IsAlive)
@@ -12775,12 +12755,12 @@
 					if (Main.inputText.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.Delete) && !Main.oldInputText.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.Delete))
 					{
 						Thread thread4 = new Thread((ThreadStart)delegate
-						{
-							if (oldString.Length > 0)
-							{
-								Clipboard.SetText(oldString);
-							}
-						});
+							{
+								if (oldString.Length > 0)
+								{
+									Clipboard.SetText(oldString);
+								}
+							});
 						thread4.SetApartmentState(ApartmentState.STA);
 						thread4.Start();
 						while (thread4.IsAlive)
@@ -12791,17 +12771,17 @@
 					if (Main.inputText.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.Insert) && !Main.oldInputText.IsKeyDown(Microsoft.Xna.Framework.Input.Keys.Insert))
 					{
 						Thread thread5 = new Thread((ThreadStart)delegate
-						{
-							string text2 = Clipboard.GetText();
-							for (int l = 0; l < text2.Length; l++)
-							{
-								if (text2[l] < ' ' || text2[l] == '\u007f')
-								{
-									text2 = text2.Replace(string.Concat(text2[l--]), "");
-								}
-							}
-							newKeys += text2;
-						});
+							{
+								string text2 = Clipboard.GetText();
+								for (int l = 0; l < text2.Length; l++)
+								{
+									if (text2[l] < ' ' || text2[l] == '\u007f')
+									{
+										text2 = text2.Replace(string.Concat(text2[l--]), "");
+									}
+								}
+								newKeys += text2;
+							});
 						thread5.SetApartmentState(ApartmentState.STA);
 						thread5.Start();
 						while (thread5.IsAlive)
@@ -12871,9 +12851,6 @@
 				}
 			}
 			return text;
-#else
-			return "";
-#endif
 		}
 
 		public void MouseText(string cursorText, int rare = 0, byte diff = 0)
@@ -14281,6 +14258,7 @@
 						{
 							effects = SpriteEffects.FlipHorizontally;
 						}
+						TileLoader.SetSpriteEffects(j, i, type, ref effects);
 						Microsoft.Xna.Framework.Color color = Lighting.GetColor(j, i);
 						int num11 = 0;
 						int num12 = 16;
@@ -14520,6 +14498,7 @@
 						{
 							num11 = 2;
 						}
+						TileLoader.SetDrawPositions(tile, ref num9, ref num11, ref num12);
 						int num14 = 0;
 						if (tile.halfBrick())
 						{
@@ -14696,6 +14675,12 @@
 							}
 							num16 = k * 18;
 							num15 = 0;
+						}
+						TileLoader.SetAnimationFrame(type, ref num15);
+						if (!TileLoader.PreDraw(j, i, type, Main.spriteBatch))
+						{
+							TileLoader.PostDraw(j, i, type, Main.spriteBatch);
+							continue;
 						}
 						if (type == 373 || type == 374 || type == 375)
 						{
@@ -17959,6 +17944,7 @@
 								int num281 = 0;
 								Main.spriteBatch.Draw(texture2D, new Vector2((float)(j * 16 - (int)Main.screenPosition.X) - ((float)num9 - 16f) / 2f + (float)num280, (float)(i * 16 - (int)Main.screenPosition.Y + num11 + num281)) + zero, new Microsoft.Xna.Framework.Rectangle?(empty), color2, 0f, default(Vector2), 1f, effects, 0f);
 							}
+							TileLoader.PostDraw(j, i, type, Main.spriteBatch);
 						}
 					}
 				}
@@ -19253,23 +19239,25 @@
 								float num4;
 								switch (m)
 								{
+									case 0:
 									default:
 										num3 = num2;
 										num4 = 0f;
-										break;
+										goto IL_7AF;
 									case 1:
 										num3 = -num2;
 										num4 = 0f;
-										break;
+										goto IL_7AF;
 									case 2:
 										num3 = 0f;
 										num4 = num2;
-										break;
+										goto IL_7AF;
 									case 3:
 										num3 = 0f;
 										num4 = -num2;
-										break;
-								}
+										goto IL_7AF;
+								}
+								IL_7AF:
 								position = new Vector2(player.position.X + num3, player.position.Y + player.gfxOffY + num4);
 								this.DrawPlayer(player, position, player.fullRotation, player.fullRotationOrigin, player.ghostFade);
 							}
@@ -19347,7 +19335,7 @@
 			{
 				try
 				{
-					if (Main.npc[i].active && Main.npc[i].type > 0 && Main.npc[i].type < 540 && !Main.npc[i].hide && Main.npc[i].behindTiles == behindTiles)
+					if (Main.npc[i].active && Main.npc[i].type > 0 && !Main.npc[i].hide && Main.npc[i].behindTiles == behindTiles)
 					{
 						if (Main.npc[i].type == 125 || Main.npc[i].type == 126)
 						{
@@ -26543,7 +26531,7 @@
 			for (int i = 0; i < 16 + drawPlayer.extraAccessorySlots * 2; i++)
 			{
 				int num2 = i % 10;
-				if (drawPlayer.dye[num2] != null && drawPlayer.armor[i].type > 0 && drawPlayer.armor[i].stack > 0 && drawPlayer.armor[i].faceSlot > 0 && drawPlayer.armor[i].faceSlot < 9)
+				if (drawPlayer.dye[num2] != null && drawPlayer.armor[i].type > 0 && drawPlayer.armor[i].stack > 0 && drawPlayer.armor[i].faceSlot > 0)
 				{
 					byte arg_81_0 = drawPlayer.dye[num2].dye;
 				}
@@ -26596,7 +26584,8 @@
 			{
 				flag2 = true;
 			}
-			if (drawPlayer.head != 38 && drawPlayer.head != 135)
+			ItemLoader.DrawHair(drawPlayer, ref flag, ref flag2);
+			if (drawPlayer.head != 38 && drawPlayer.head != 135 && ItemLoader.DrawHead(drawPlayer))
 			{
 				Main.spriteBatch.Draw(Main.playerTextures[skinVariant, 0], new Vector2(drawPlayer.position.X - Main.screenPosition.X - (float)(drawPlayer.bodyFrame.Width / 2) + (float)(drawPlayer.width / 2), drawPlayer.position.Y - Main.screenPosition.Y + (float)drawPlayer.height - (float)drawPlayer.bodyFrame.Height + 4f) + drawPlayer.headPosition + vector, new Microsoft.Xna.Framework.Rectangle?(drawPlayer.bodyFrame), color4, drawPlayer.headRotation, vector, Scale, spriteEffects, 0f);
 				Main.spriteBatch.Draw(Main.playerTextures[skinVariant, 1], new Vector2(drawPlayer.position.X - Main.screenPosition.X - (float)(drawPlayer.bodyFrame.Width / 2) + (float)(drawPlayer.width / 2), drawPlayer.position.Y - Main.screenPosition.Y + (float)drawPlayer.height - (float)drawPlayer.bodyFrame.Height + 4f) + drawPlayer.headPosition + vector, new Microsoft.Xna.Framework.Rectangle?(drawPlayer.bodyFrame), color, drawPlayer.headRotation, vector, Scale, spriteEffects, 0f);
@@ -26709,7 +26698,7 @@
 				value4.Draw(Main.spriteBatch);
 				Main.pixelShader.CurrentTechnique.Passes[0].Apply();
 			}
-			else if (drawPlayer.head > 0 && drawPlayer.head < 194 && drawPlayer.head != 28)
+			else if (drawPlayer.head > 0 && drawPlayer.head != 28)
 			{
 				DrawData value5 = new DrawData(Main.armorHeadTexture[drawPlayer.head], new Vector2(drawPlayer.position.X - Main.screenPosition.X - (float)(drawPlayer.bodyFrame.Width / 2) + (float)(drawPlayer.width / 2), drawPlayer.position.Y - Main.screenPosition.Y + (float)drawPlayer.height - (float)drawPlayer.bodyFrame.Height + 4f) + drawPlayer.headPosition + vector, new Microsoft.Xna.Framework.Rectangle?(drawPlayer.bodyFrame), color5, drawPlayer.headRotation, vector, Scale, spriteEffects, 0);
 				GameShaders.Armor.Apply(shaderId, drawPlayer, new DrawData?(value5));
@@ -26729,7 +26718,7 @@
 				value6.Draw(Main.spriteBatch);
 				Main.pixelShader.CurrentTechnique.Passes[0].Apply();
 			}
-			if (drawPlayer.face > 0 && drawPlayer.face < 9)
+			if (drawPlayer.face > 0)
 			{
 				DrawData value7;
 				if (drawPlayer.face == 7)
@@ -26806,6 +26795,7 @@
 			{
 				flag5 = true;
 			}
+			ItemLoader.DrawHair(drawPlayer, ref flag4, ref flag5);
 			bool flag6 = false;
 			if (drawPlayer.face == 4 || drawPlayer.face == 3 || drawPlayer.face == 2)
 			{
@@ -26854,47 +26844,47 @@
 				int num8 = i % 10;
 				if (drawPlayer.dye[num8] != null && drawPlayer.armor[i].type > 0 && drawPlayer.armor[i].stack > 0 && (i / 10 >= 1 || !drawPlayer.hideVisual[num8] || drawPlayer.armor[i].wingSlot > 0 || drawPlayer.armor[i].type == 934))
 				{
-					if (drawPlayer.armor[i].handOnSlot > 0 && drawPlayer.armor[i].handOnSlot < 19)
+					if (drawPlayer.armor[i].handOnSlot > 0)
 					{
 						shader2 = (int)drawPlayer.dye[num8].dye;
 					}
-					if (drawPlayer.armor[i].handOffSlot > 0 && drawPlayer.armor[i].handOffSlot < 12)
+					if (drawPlayer.armor[i].handOffSlot > 0)
 					{
 						shader3 = (int)drawPlayer.dye[num8].dye;
 					}
-					if (drawPlayer.armor[i].backSlot > 0 && drawPlayer.armor[i].backSlot < 10)
+					if (drawPlayer.armor[i].backSlot > 0)
 					{
 						shader4 = (int)drawPlayer.dye[num8].dye;
 					}
-					if (drawPlayer.armor[i].frontSlot > 0 && drawPlayer.armor[i].frontSlot < 5)
+					if (drawPlayer.armor[i].frontSlot > 0)
 					{
 						shader5 = (int)drawPlayer.dye[num8].dye;
 					}
-					if (drawPlayer.armor[i].shoeSlot > 0 && drawPlayer.armor[i].shoeSlot < 18)
+					if (drawPlayer.armor[i].shoeSlot > 0)
 					{
 						shader6 = (int)drawPlayer.dye[num8].dye;
 					}
-					if (drawPlayer.armor[i].waistSlot > 0 && drawPlayer.armor[i].waistSlot < 12)
+					if (drawPlayer.armor[i].waistSlot > 0)
 					{
 						shader7 = (int)drawPlayer.dye[num8].dye;
 					}
-					if (drawPlayer.armor[i].shieldSlot > 0 && drawPlayer.armor[i].shieldSlot < 6)
+					if (drawPlayer.armor[i].shieldSlot > 0)
 					{
 						shader8 = (int)drawPlayer.dye[num8].dye;
 					}
-					if (drawPlayer.armor[i].neckSlot > 0 && drawPlayer.armor[i].neckSlot < 9)
+					if (drawPlayer.armor[i].neckSlot > 0)
 					{
 						shader9 = (int)drawPlayer.dye[num8].dye;
 					}
-					if (drawPlayer.armor[i].faceSlot > 0 && drawPlayer.armor[i].faceSlot < 9)
+					if (drawPlayer.armor[i].faceSlot > 0)
 					{
 						shader10 = (int)drawPlayer.dye[num8].dye;
 					}
-					if (drawPlayer.armor[i].balloonSlot > 0 && drawPlayer.armor[i].balloonSlot < 16)
+					if (drawPlayer.armor[i].balloonSlot > 0)
 					{
 						shader11 = (int)drawPlayer.dye[num8].dye;
 					}
-					if (drawPlayer.armor[i].wingSlot > 0 && drawPlayer.armor[i].wingSlot < 37)
+					if (drawPlayer.armor[i].wingSlot > 0)
 					{
 						shader12 = (int)drawPlayer.dye[num8].dye;
 					}
@@ -27919,9 +27909,9 @@
 					Main.playerDrawData.Add(value);
 				}
 			}
-			if (!flag8 && drawPlayer.back > 0 && drawPlayer.back < 10 && !drawPlayer.mount.Active)
-			{
-				if (drawPlayer.front >= 1 && drawPlayer.front <= 4)
+			if (!flag8 && drawPlayer.back > 0 && !drawPlayer.mount.Active)
+			{
+				if (drawPlayer.front >= 1)
 				{
 					int num54 = drawPlayer.bodyFrame.Y / 56;
 					if (num54 < 1 || num54 > 5)
@@ -28161,7 +28151,7 @@
 				goto IL_5B88;
 			}
 			IL_5852:
-			if (drawPlayer.legs > 0 && drawPlayer.legs < 135 && (drawPlayer.shoe != 15 || drawPlayer.wearsRobe))
+			if (drawPlayer.legs > 0 && (drawPlayer.shoe != 15 || drawPlayer.wearsRobe))
 			{
 				if (!drawPlayer.invis)
 				{
@@ -28188,7 +28178,7 @@
 				goto IL_5C63;
 			}
 			IL_5B88:
-			if (drawPlayer.shoe > 0 && drawPlayer.shoe < 18)
+			if (drawPlayer.shoe > 0)
 			{
 				value = new DrawData(Main.accShoesTexture[(int)drawPlayer.shoe], new Vector2((float)((int)(Position.X - Main.screenPosition.X - (float)(drawPlayer.legFrame.Width / 2) + (float)(drawPlayer.width / 2))), (float)((int)(Position.Y - Main.screenPosition.Y + (float)drawPlayer.height - (float)drawPlayer.legFrame.Height + 4f))) + drawPlayer.legPosition + vector2, new Microsoft.Xna.Framework.Rectangle?(drawPlayer.legFrame), color14, drawPlayer.legRotation, vector2, 1f, spriteEffects, 0);
 				value.shader = shader6;
@@ -28199,12 +28189,12 @@
 				goto IL_5852;
 			}
 			IL_5C63:
-			if (skinVariant == 3 && (drawPlayer.body <= 0 || drawPlayer.body >= 195) && !drawPlayer.invis)
+			if (skinVariant == 3 && drawPlayer.body <= 0 && !drawPlayer.invis)
 			{
 				value = new DrawData(Main.playerTextures[skinVariant, 14], new Vector2((float)((int)(Position.X - Main.screenPosition.X - (float)(drawPlayer.legFrame.Width / 2) + (float)(drawPlayer.width / 2))), (float)((int)(Position.Y - Main.screenPosition.Y + (float)drawPlayer.height - (float)drawPlayer.legFrame.Height + 4f))) + drawPlayer.legPosition + vector2, new Microsoft.Xna.Framework.Rectangle?(drawPlayer.legFrame), color7, drawPlayer.legRotation, vector2, 1f, spriteEffects, 0);
 				Main.playerDrawData.Add(value);
 			}
-			if (drawPlayer.body > 0 && drawPlayer.body < 195)
+			if (drawPlayer.body > 0)
 			{
 				Microsoft.Xna.Framework.Rectangle bodyFrame2 = drawPlayer.bodyFrame;
 				int num61 = num2;
@@ -28260,13 +28250,13 @@
 				value = new DrawData(Main.playerTextures[skinVariant, 5], new Vector2((float)((int)(Position.X - Main.screenPosition.X - (float)(drawPlayer.bodyFrame.Width / 2) + (float)(drawPlayer.width / 2))), (float)((int)(Position.Y - Main.screenPosition.Y + (float)drawPlayer.height - (float)drawPlayer.bodyFrame.Height + 4f))) + drawPlayer.bodyPosition + new Vector2((float)(drawPlayer.bodyFrame.Width / 2), (float)(drawPlayer.bodyFrame.Height / 2)), new Microsoft.Xna.Framework.Rectangle?(drawPlayer.bodyFrame), color5, drawPlayer.bodyRotation, origin, 1f, spriteEffects, 0);
 				Main.playerDrawData.Add(value);
 			}
-			if (drawPlayer.handoff > 0 && drawPlayer.handoff < 12)
+			if (drawPlayer.handoff > 0)
 			{
 				value = new DrawData(Main.accHandsOffTexture[(int)drawPlayer.handoff], new Vector2((float)((int)(Position.X - Main.screenPosition.X - (float)(drawPlayer.bodyFrame.Width / 2) + (float)(drawPlayer.width / 2))), (float)((int)(Position.Y - Main.screenPosition.Y + (float)drawPlayer.height - (float)drawPlayer.bodyFrame.Height + 4f))) + drawPlayer.bodyPosition + new Vector2((float)(drawPlayer.bodyFrame.Width / 2), (float)(drawPlayer.bodyFrame.Height / 2)), new Microsoft.Xna.Framework.Rectangle?(drawPlayer.bodyFrame), color12, drawPlayer.bodyRotation, origin, 1f, spriteEffects, 0);
 				value.shader = shader3;
 				Main.playerDrawData.Add(value);
 			}
-			if (drawPlayer.waist > 0 && drawPlayer.waist < 12)
+			if (drawPlayer.waist > 0)
 			{
 				Microsoft.Xna.Framework.Rectangle legFrame = drawPlayer.legFrame;
 				if (legFrame.Y >= 1064)
@@ -28277,13 +28267,13 @@
 				value.shader = shader7;
 				Main.playerDrawData.Add(value);
 			}
-			if (drawPlayer.neck > 0 && drawPlayer.neck < 9)
+			if (drawPlayer.neck > 0)
 			{
 				value = new DrawData(Main.accNeckTexture[(int)drawPlayer.neck], new Vector2((float)((int)(Position.X - Main.screenPosition.X - (float)(drawPlayer.bodyFrame.Width / 2) + (float)(drawPlayer.width / 2))), (float)((int)(Position.Y - Main.screenPosition.Y + (float)drawPlayer.height - (float)drawPlayer.bodyFrame.Height + 4f))) + drawPlayer.bodyPosition + new Vector2((float)(drawPlayer.bodyFrame.Width / 2), (float)(drawPlayer.bodyFrame.Height / 2)), new Microsoft.Xna.Framework.Rectangle?(drawPlayer.bodyFrame), color12, drawPlayer.bodyRotation, origin, 1f, spriteEffects, 0);
 				value.shader = shader9;
 				Main.playerDrawData.Add(value);
 			}
-			if (!drawPlayer.invis && drawPlayer.head != 38 && drawPlayer.head != 135)
+			if (!drawPlayer.invis && drawPlayer.head != 38 && drawPlayer.head != 135 && ItemLoader.DrawHead(drawPlayer))
 			{
 				value = new DrawData(Main.playerTextures[skinVariant, 0], new Vector2((float)((int)(Position.X - Main.screenPosition.X - (float)(drawPlayer.bodyFrame.Width / 2) + (float)(drawPlayer.width / 2))), (float)((int)(Position.Y - Main.screenPosition.Y + (float)drawPlayer.height - (float)drawPlayer.bodyFrame.Height + 4f))) + drawPlayer.headPosition + vector3, new Microsoft.Xna.Framework.Rectangle?(drawPlayer.bodyFrame), color4, drawPlayer.headRotation, vector3, 1f, spriteEffects, 0);
 				Main.playerDrawData.Add(value);
@@ -28350,7 +28340,7 @@
 				value.shader = num6;
 				Main.playerDrawData.Add(value);
 			}
-			else if (drawPlayer.head > 0 && drawPlayer.head < 194 && drawPlayer.head != 28)
+			else if (drawPlayer.head > 0 && drawPlayer.head != 28)
 			{
 				if (!drawPlayer.invis || (drawPlayer.head != 39 && drawPlayer.head != 38))
 				{
@@ -28412,7 +28402,7 @@
 					Main.playerDrawData.Add(value);
 				}
 			}
-			if (drawPlayer.face > 0 && drawPlayer.face < 9)
+			if (drawPlayer.face > 0)
 			{
 				if (drawPlayer.face == 7)
 				{
@@ -28451,7 +28441,7 @@
 					Main.playerDrawData.Add(value);
 				}
 			}
-			if (drawPlayer.shield > 0 && drawPlayer.shield < 6)
+			if (drawPlayer.shield > 0)
 			{
 				value = new DrawData(Main.accShieldTexture[(int)drawPlayer.shield], new Vector2((float)((int)(Position.X - Main.screenPosition.X - (float)(drawPlayer.bodyFrame.Width / 2) + (float)(drawPlayer.width / 2))), (float)((int)(Position.Y - Main.screenPosition.Y + (float)drawPlayer.height - (float)drawPlayer.bodyFrame.Height + 4f))) + drawPlayer.bodyPosition + new Vector2((float)(drawPlayer.bodyFrame.Width / 2), (float)(drawPlayer.bodyFrame.Height / 2)), new Microsoft.Xna.Framework.Rectangle?(drawPlayer.bodyFrame), color12, drawPlayer.bodyRotation, origin, 1f, spriteEffects, 0);
 				value.shader = shader8;
@@ -28660,7 +28650,7 @@
 					}
 				}
 			}
-			if (drawPlayer.body > 0 && drawPlayer.body < 195)
+			if (drawPlayer.body > 0)
 			{
 				Microsoft.Xna.Framework.Rectangle bodyFrame4 = drawPlayer.bodyFrame;
 				int num82 = num2;
@@ -28703,7 +28693,7 @@
 				value = new DrawData(Main.playerTextures[skinVariant, 13], new Vector2((float)((int)(Position.X - Main.screenPosition.X - (float)(drawPlayer.bodyFrame.Width / 2) + (float)(drawPlayer.width / 2))), (float)((int)(Position.Y - Main.screenPosition.Y + (float)drawPlayer.height - (float)drawPlayer.bodyFrame.Height + 4f))) + drawPlayer.bodyPosition + new Vector2((float)(drawPlayer.bodyFrame.Width / 2), (float)(drawPlayer.bodyFrame.Height / 2)), new Microsoft.Xna.Framework.Rectangle?(drawPlayer.bodyFrame), color7, drawPlayer.bodyRotation, origin, 1f, spriteEffects, 0);
 				Main.playerDrawData.Add(value);
 			}
-			if (drawPlayer.handon > 0 && drawPlayer.handon < 19)
+			if (drawPlayer.handon > 0)
 			{
 				value = new DrawData(Main.accHandsOnTexture[(int)drawPlayer.handon], new Vector2((float)((int)(Position.X - Main.screenPosition.X - (float)(drawPlayer.bodyFrame.Width / 2) + (float)(drawPlayer.width / 2))), (float)((int)(Position.Y - Main.screenPosition.Y + (float)drawPlayer.height - (float)drawPlayer.bodyFrame.Height + 4f))) + drawPlayer.bodyPosition + new Vector2((float)(drawPlayer.bodyFrame.Width / 2), (float)(drawPlayer.bodyFrame.Height / 2)), new Microsoft.Xna.Framework.Rectangle?(drawPlayer.bodyFrame), color12, drawPlayer.bodyRotation, origin, 1f, spriteEffects, 0);
 				value.shader = shader2;
@@ -28727,7 +28717,7 @@
 			{
 				num = Main.playerDrawData.Count;
 			}
-			if (!flag8 && drawPlayer.front > 0 && drawPlayer.front < 5 && !drawPlayer.mount.Active)
+			if (!flag8 && drawPlayer.front > 0 && !drawPlayer.mount.Active)
 			{
 				value = new DrawData(Main.accFrontTexture[(int)drawPlayer.front], new Vector2((float)((int)(Position.X - Main.screenPosition.X - (float)(drawPlayer.bodyFrame.Width / 2) + (float)(drawPlayer.width / 2))), (float)((int)(Position.Y - Main.screenPosition.Y + (float)drawPlayer.height - (float)drawPlayer.bodyFrame.Height + 4f))) + drawPlayer.bodyPosition + new Vector2((float)(drawPlayer.bodyFrame.Width / 2), (float)(drawPlayer.bodyFrame.Height / 2)), new Microsoft.Xna.Framework.Rectangle?(drawPlayer.bodyFrame), color12, drawPlayer.bodyRotation, origin, 1f, spriteEffects, 0);
 				value.shader = shader5;
@@ -28915,6 +28905,11 @@
 			float scale = 1f;
 			Microsoft.Xna.Framework.Color alpha = item.GetAlpha(color);
 			ItemSlot.GetItemLight(ref alpha, ref scale, item, false);
+			if (!ItemLoader.PreDrawInWorld(item, Main.spriteBatch, color, alpha, ref rotation, ref scale))
+			{
+				ItemLoader.PostDrawInWorld(item, Main.spriteBatch, color, alpha, rotation, scale);
+				return;
+			}
 			float num4 = (float)(item.height - Main.itemTexture[item.type].Height);
 			float num5 = (float)(item.width / 2 - Main.itemTexture[item.type].Width / 2);
 			if (item.type >= 71 && item.type <= 74)
@@ -28934,6 +28929,7 @@
 				int num7 = Main.coinTexture[num6].Height / 8;
 				num5 = (float)(item.width / 2 - Main.coinTexture[num6].Width / 2);
 				Main.spriteBatch.Draw(Main.coinTexture[num6], new Vector2(item.position.X - Main.screenPosition.X + (float)(width / 2) + num5, item.position.Y - Main.screenPosition.Y + (float)(num7 / 2) + num4), new Microsoft.Xna.Framework.Rectangle?(new Microsoft.Xna.Framework.Rectangle(0, Main.itemFrame[whoami] * num7 + 1, Main.itemTexture[item.type].Width, num7)), alpha, rotation, new Vector2((float)(width / 2), (float)(num7 / 2)), scale, SpriteEffects.None, 0f);
+				ItemLoader.PostDrawInWorld(item, Main.spriteBatch, color, alpha, rotation, scale);
 				return;
 			}
 			if (ItemID.Sets.NebulaPickup[item.type])
@@ -28952,6 +28948,7 @@
 				num5 = (float)(item.width / 2 - rectangle.Width / 2);
 				num4 = (float)(item.height - rectangle.Height);
 				Main.spriteBatch.Draw(Main.itemTexture[item.type], new Vector2(item.position.X - Main.screenPosition.X + (float)(rectangle.Width / 2) + num5, item.position.Y - Main.screenPosition.Y + (float)(rectangle.Height / 2) + num4), new Microsoft.Xna.Framework.Rectangle?(rectangle), alpha, rotation, rectangle.Size() / 2f, scale, SpriteEffects.None, 0f);
+				ItemLoader.PostDrawInWorld(item, Main.spriteBatch, color, alpha, rotation, scale);
 				return;
 			}
 			if (ItemID.Sets.AnimatesAsSoul[item.type])
@@ -28970,11 +28967,19 @@
 				num5 = (float)(item.width / 2 - rectangle2.Width / 2);
 				num4 = (float)(item.height - rectangle2.Height);
 				Main.spriteBatch.Draw(Main.itemTexture[item.type], new Vector2(item.position.X - Main.screenPosition.X + (float)(rectangle2.Width / 2) + num5, item.position.Y - Main.screenPosition.Y + (float)(rectangle2.Height / 2) + num4), new Microsoft.Xna.Framework.Rectangle?(rectangle2), alpha, rotation, rectangle2.Size() / 2f, scale, SpriteEffects.None, 0f);
+				ItemLoader.PostDrawInWorld(item, Main.spriteBatch, color, alpha, rotation, scale);
 				return;
 			}
 			if (item.type >= 1522 && item.type <= 1527)
 			{
 				Main.spriteBatch.Draw(Main.itemTexture[item.type], new Vector2(item.position.X - Main.screenPosition.X + (float)(Main.itemTexture[item.type].Width / 2) + num5, item.position.Y - Main.screenPosition.Y + (float)(Main.itemTexture[item.type].Height / 2) + num4 + 2f), new Microsoft.Xna.Framework.Rectangle?(new Microsoft.Xna.Framework.Rectangle(0, 0, Main.itemTexture[item.type].Width, Main.itemTexture[item.type].Height)), new Microsoft.Xna.Framework.Color(250, 250, 250, (int)(Main.mouseTextColor / 2)), rotation, new Vector2((float)(Main.itemTexture[item.type].Width / 2), (float)(Main.itemTexture[item.type].Height / 2)), (float)Main.mouseTextColor / 1000f + 0.8f, SpriteEffects.None, 0f);
+				ItemLoader.PostDrawInWorld(item, Main.spriteBatch, color, alpha, rotation, scale);
+				return;
+			}
+			if (ItemLoader.animations.Contains(item.type))
+			{
+				ItemLoader.DrawAnimatedItem(item, color, alpha, rotation, scale);
+				ItemLoader.PostDrawInWorld(item, Main.spriteBatch, color, alpha, rotation, scale);
 				return;
 			}
 			Main.spriteBatch.Draw(Main.itemTexture[item.type], new Vector2(item.position.X - Main.screenPosition.X + (float)(Main.itemTexture[item.type].Width / 2) + num5, item.position.Y - Main.screenPosition.Y + (float)(Main.itemTexture[item.type].Height / 2) + num4 + 2f), new Microsoft.Xna.Framework.Rectangle?(new Microsoft.Xna.Framework.Rectangle(0, 0, Main.itemTexture[item.type].Width, Main.itemTexture[item.type].Height)), alpha, rotation, new Vector2((float)(Main.itemTexture[item.type].Width / 2), (float)(Main.itemTexture[item.type].Height / 2)), scale, SpriteEffects.None, 0f);
@@ -28986,6 +28991,7 @@
 			{
 				Main.spriteBatch.Draw(Main.glowMaskTexture[(int)item.glowMask], new Vector2(item.position.X - Main.screenPosition.X + (float)(Main.itemTexture[item.type].Width / 2) + num5, item.position.Y - Main.screenPosition.Y + (float)(Main.itemTexture[item.type].Height / 2) + num4 + 2f), new Microsoft.Xna.Framework.Rectangle?(new Microsoft.Xna.Framework.Rectangle(0, 0, Main.itemTexture[item.type].Width, Main.itemTexture[item.type].Height)), new Microsoft.Xna.Framework.Color(250, 250, 250, item.alpha), rotation, new Vector2((float)(Main.itemTexture[item.type].Width / 2), (float)(Main.itemTexture[item.type].Height / 2)), scale, SpriteEffects.None, 0f);
 			}
+			ItemLoader.PostDrawInWorld(item, Main.spriteBatch, color, alpha, rotation, scale);
 		}
 
 		protected void DrawRain()
@@ -29139,6 +29145,11 @@
 						if (dust.type == 213)
 						{
 							scale = 1f;
+						}
+						if (dust.modDust != null)
+						{
+							dust.modDust.Draw(dust, color5, scale);
+							continue;
 						}
 						Main.spriteBatch.Draw(Main.dustTexture, dust.position - Main.screenPosition, new Microsoft.Xna.Framework.Rectangle?(dust.frame), color5, dust.rotation, new Vector2(4f, 4f), scale, SpriteEffects.None, 0f);
 						if (dust.color != default(Microsoft.Xna.Framework.Color))
@@ -31774,7 +31785,7 @@
 							else
 							{
 								num61++;
-								Main.spriteBatch.DrawString(Main.fontMouseText, Lang.mapLegend[MapHelper.TileToLookup(Main.recipe[Main.availableRecipe[num60]].requiredTile[num62], 0)], new Vector2((float)num58, (float)(num59 + 118 + num63)), color3, 0f, default(Vector2), 1f, SpriteEffects.None, 0f);
+								Main.spriteBatch.DrawString(Main.fontMouseText, Lang.mapLegend.FromType(Main.recipe[Main.availableRecipe[num60]].requiredTile[num62]), new Vector2((float)num58, (float)(num59 + 118 + num63)), color3, 0f, default(Vector2), 1f, SpriteEffects.None, 0f);
 								num62++;
 							}
 						}
@@ -32025,6 +32036,14 @@
 							else if (Main.recipe[Main.availableRecipe[Main.focusRecipe]].anyPressurePlate && Main.recipe[Main.availableRecipe[Main.focusRecipe]].requiredItem[num72].type == 542)
 							{
 								Main.toolTip.name = Lang.misc[37] + " " + Lang.misc[38];
+							}
+							else
+							{
+								ModRecipe recipe = Main.recipe[Main.availableRecipe[Main.focusRecipe]] as ModRecipe;
+								if (recipe != null)
+								{
+									recipe.CraftGroupDisplayName(num72);
+								}
 							}
 							if (Main.recipe[Main.availableRecipe[Main.focusRecipe]].requiredItem[num72].stack > 1)
 							{
@@ -35598,7 +35617,7 @@
 						}
 						else
 						{
-							text2 = Lang.mapLegend[MapHelper.TileToLookup(Main.player[Main.myPlayer].bestOre, 0)] + " detected nearby!";
+							text2 = Lang.mapLegend.FromType(Main.player[Main.myPlayer].bestOre) + " detected nearby!";
 						}
 						flag10 = true;
 					}
@@ -36418,9 +36437,7 @@
 		protected void QuitGame()
 		{
 			Main.SaveSettings();
-#if CLIENT
 			SocialAPI.Shutdown();
-#endif
 			base.Exit();
 		}
 
@@ -37342,6 +37359,7 @@
 						Main.menuMode = 888;
 					}
 					num9++;
+					Interface.AddMenuButtons(this, this.selectedMenu, array9, array7, ref num, ref num3, ref num9, ref num4);
 					array9[num9] = Lang.menu[14];
 					if (this.selectedMenu == num9)
 					{
@@ -39051,6 +39069,10 @@
 							Main.PlaySound(10, -1, -1, 1);
 							WorldGen.setWorldSize();
 						}
+					}
+					else
+					{
+						Interface.ModLoaderMenus(this, this.selectedMenu, array9, array7, ref num, ref num3, ref num4);
 					}
 				}
 			}
@@ -43448,7 +43470,7 @@
 					}
 					else
 					{
-						text = Lang.mapLegend[type];
+						text = Lang.mapLegend[Main.Map[num91, num92]];
 					}
 				}
 				float num103 = (num16 * 0.25f * 2f + 1f) / 3f;
@@ -45979,12 +46001,17 @@
 						tile = new Tile();
 						Main.tile[j, i] = tile;
 					}
-					byte wall = tile.wall;
+					ushort wall = tile.wall;
 					if (tile.wall > 0 && !this.FullTile(j, i))
 					{
 						this.LoadWall((int)tile.wall);
 						Microsoft.Xna.Framework.Color color = Lighting.GetColor(j, i);
 						int num9 = (int)(Main.wallFrame[(int)wall] * 180);
+						if (!WallLoader.PreDraw(j, i, wall, Main.spriteBatch))
+						{
+							WallLoader.PostDraw(j, i, wall, Main.spriteBatch);
+							continue;
+						}
 						if (Lighting.lightMode < 2 && !Main.wallLight[(int)tile.wall] && (tile.wall < 88 || tile.wall > 93) && !WorldGen.SolidTile(tile))
 						{
 							Texture2D texture;
@@ -46072,6 +46099,7 @@
 								Main.spriteBatch.Draw(Main.wallOutlineTexture, new Vector2((float)(j * 16 - (int)Main.screenPosition.X), (float)(i * 16 - (int)Main.screenPosition.Y + 14)) + zero, new Microsoft.Xna.Framework.Rectangle?(new Microsoft.Xna.Framework.Rectangle(0, 14, 16, 2)), Lighting.GetColor(j, i), 0f, default(Vector2), 1f, SpriteEffects.None, 0f);
 							}
 						}
+						WallLoader.PostDraw(j, i, wall, Main.spriteBatch);
 					}
 				}
 			}
@@ -48827,7 +48855,6 @@
 
 		private static void CheckMonoliths()
 		{
-#if CLIENT
 			bool flag = Main.player[Main.myPlayer].ZoneTowerVortex || Main.player[Main.myPlayer].ZoneTowerNebula || Main.player[Main.myPlayer].ZoneTowerStardust || Main.player[Main.myPlayer].ZoneTowerSolar;
 			for (int i = 0; i < Main.MonolithFilterNames.Length; i++)
 			{
@@ -48854,10 +48881,22 @@
 					}
 				}
 			}
-#endif
 		}
 
 		protected override void Draw(GameTime gameTime)
+		{
+			try
+			{
+				do_Draw(gameTime);
+			}
+			catch (Exception e)
+			{
+				ErrorLogger.LogException(e);
+				throw;
+			}
+		}
+
+		protected void do_Draw(GameTime gameTime)
 		{
 			if (Main._drawCycleCounter == 0uL)
 			{
@@ -48903,9 +48942,7 @@
 			{
 				Main.maxQ = true;
 			}
-#if CLIENT
 			this.UpdateDisplaySettings();
-#endif
 			Main.drawTime++;
 			Main.screenLastPosition = Main.screenPosition;
 			if (Main.stackSplit == 0)
@@ -51831,7 +51868,6 @@
 			Main.UpdateSundial();
 			Main.time += (double)Main.dayRate;
 			CultistRitual.UpdateTime();
-#if CLIENT
 			if (NPC.MoonLordCountdown > 0)
 			{
 				float num5 = MathHelper.Clamp((float)Math.Sin((double)((float)NPC.MoonLordCountdown / 60f * 0.5f)) * 2f, 0f, 1f);
@@ -51846,7 +51882,6 @@
 			{
 				Filters.Scene.Deactivate("MoonLordShake", new object[0]);
 			}
-#endif
 			if (NPC.MoonLordCountdown > 0)
 			{
 				NPC.MoonLordCountdown--;

