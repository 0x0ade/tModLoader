--- src/Terraria\Terraria.UI\ItemSorting.cs
+++ src/tModLoader\Terraria.UI\ItemSorting.cs
@@ -2,6 +_,7 @@
 using System.Collections.Generic;
 using System.Linq;
 using Terraria.ID;
+using Terraria.ModLoader;
 
 namespace Terraria.UI
 {
@@ -52,7 +_,7 @@
 							int num = inv[y].rare.CompareTo(inv[x].rare);
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -73,7 +_,7 @@
 							int num = inv[y].rare.CompareTo(inv[x].rare);
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -94,7 +_,7 @@
 							int num = inv[y].rare.CompareTo(inv[x].rare);
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -115,7 +_,7 @@
 							int num = inv[y].rare.CompareTo(inv[x].rare);
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -136,7 +_,7 @@
 							int num = inv[y].rare.CompareTo(inv[x].rare);
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -157,7 +_,7 @@
 							int num = inv[y].rare.CompareTo(inv[x].rare);
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -178,7 +_,7 @@
 							int num = inv[y].rare.CompareTo(inv[x].rare);
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -268,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -289,7 +_,7 @@
 							int num = inv[y].rare.CompareTo(inv[x].rare);
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -381,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -406,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -431,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -456,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -481,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -549,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -578,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -607,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -632,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -665,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -720,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -762,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -787,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -812,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -841,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -864,7 +_,7 @@
 							}
 							if (num == 0)
 							{
-								num = ((x == y) ? 0 : -1);
+								num = y.CompareTo(x);
 							}
 							return num;
 						});
@@ -920,7 +_,7 @@
 			list.Add(ItemSorting.ItemSortingLayers.LastTilesCommon);
 			list.Add(ItemSorting.ItemSortingLayers.LastNotTrash);
 			list.Add(ItemSorting.ItemSortingLayers.LastTrash);
-			for (int i = -48; i < 3884; i++)
+			for (int i = -48; i < ItemLoader.ItemCount; i++)
 			{
 				Item item = new Item();
 				item.netDefaults(i);

