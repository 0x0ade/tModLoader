--- src/Terraria\Terraria\Player.cs
+++ src/tModLoader\Terraria\Player.cs
@@ -14,6 +14,8 @@
 using Terraria.Graphics.Shaders;
 using Terraria.ID;
 using Terraria.IO;
+using Terraria.ModLoader;
+using Terraria.ModLoader.IO;
 using Terraria.ObjectData;
 using Terraria.Social;
 using Terraria.UI;
@@ -63,7 +65,7 @@
 		public const int defaultWidth = 20;
 		public const int defaultHeight = 42;
 		private const int shadowMax = 3;
-		private static byte[] ENCRYPTION_KEY = new UnicodeEncoding().GetBytes("h3y_gUyZ");
+		internal static byte[] ENCRYPTION_KEY = new UnicodeEncoding().GetBytes("h3y_gUyZ");
 		public Player.OverheadMessage chatOverhead = default(Player.OverheadMessage);
 		public bool alchemyTable;
 		private bool GoingDownWithGrapple;
@@ -78,7 +80,7 @@
 		public static int taxRate = 3600;
 		public static int crystalLeafDamage = 100;
 		public static int crystalLeafKB = 10;
-		public bool[] NPCBannerBuff = new bool[251];
+		public bool[] NPCBannerBuff = new bool[NPCLoader.NPCCount()];
 		public bool hasBanner;
 		public Vector2 lastDeathPostion;
 		public DateTime lastDeathTime;
@@ -293,7 +295,7 @@
 		public float ghostDir = 1f;
 		public int[] buffType = new int[22];
 		public int[] buffTime = new int[22];
-		public bool[] buffImmune = new bool[191];
+		public bool[] buffImmune = new bool[BuffLoader.BuffCount()];
 		public int heldProj = -1;
 		public int breathCD;
 		public int breathMax = 200;
@@ -581,8 +583,28 @@
 		public bool oldAdjWater;
 		public bool oldAdjHoney;
 		public bool oldAdjLava;
-		public bool[] adjTile = new bool[419];
-		public bool[] oldAdjTile = new bool[419];
+		private bool[] _adjTile = new bool[TileLoader.TileCount()];
+		public bool[] adjTile
+		{
+			get
+			{
+				if (_adjTile.Length != TileLoader.TileCount())
+					Array.Resize(ref _adjTile, TileLoader.TileCount());
+				return _adjTile;
+			}
+			set { _adjTile = value; }
+		}
+		private bool[] _oldAdjTile = new bool[TileLoader.TileCount()];
+		public bool[] oldAdjTile
+		{
+			get
+			{
+				if (_oldAdjTile.Length != TileLoader.TileCount())
+					Array.Resize(ref _oldAdjTile, TileLoader.TileCount());
+				return _oldAdjTile;
+			}
+			set { _oldAdjTile = value; }
+		}
 		private static int defaultItemGrabRange = 38;
 		private static float itemGrabSpeed = 0.45f;
 		private static float itemGrabSpeedMax = 4f;
@@ -720,8 +742,8 @@
 		public int cPet;
 		public int cLight;
 		public int cYorai;
-		public int[] ownedProjectileCounts = new int[651];
-		public bool[] npcTypeNoAggro = new bool[540];
+		public int[] ownedProjectileCounts = new int[ProjectileLoader.ProjectileCount()];
+		public bool[] npcTypeNoAggro = new bool[NPCLoader.NPCCount()];
 		public int lastPortalColorIndex;
 		public int _portalPhysicsTime;
 		public bool portalPhysicsFlag;
@@ -1324,7 +1346,7 @@
 				return;
 			}
 			int num = time1;
-			if (Main.expertMode && this.whoAmI == Main.myPlayer && (type == 20 || type == 22 || type == 23 || type == 24 || type == 30 || type == 31 || type == 32 || type == 33 || type == 35 || type == 36 || type == 39 || type == 44 || type == 46 || type == 47 || type == 69 || type == 70 || type == 80))
+			if (Main.expertMode && this.whoAmI == Main.myPlayer && BuffLoader.LongerExpertDebuff(type))
 			{
 				num = (int)(Main.expertDebuffTime * (float)num);
 			}
@@ -1349,7 +1371,10 @@
 			{
 				if (this.buffType[j] == type)
 				{
-					if (type == 94)
+					if (BuffLoader.ReApply(type, this, num, j))
+					{
+					}
+					else if (type == 94)
 					{
 						this.buffTime[j] += num;
 						if (this.buffTime[j] > Player.manaSickTimeMax)
@@ -1480,7 +1505,7 @@
 			for (int i = 0; i < 58; i++)
 			{
 				Item item2 = this.inventory[i];
-				if (item2.stack > 0 && item2.type > 0 && item2.potion && item2.healLife > 0)
+				if (item2.stack > 0 && item2.type > 0 && item2.potion && item2.healLife > 0 && ItemLoader.CanUseItem(item2, this))
 				{
 					int num3 = item2.healLife - num;
 					if (num2 < 0)
@@ -1516,6 +1541,7 @@
 					this.AddBuff(21, this.potionDelay, true);
 				}
 			}
+			ItemLoader.UseItem(item, this);
 			this.statLife += item.healLife;
 			this.statMana += item.healMana;
 			if (this.statLife > this.statLifeMax2)
@@ -1534,7 +1560,12 @@
 			{
 				this.ManaEffect(item.healMana);
 			}
-			item.stack--;
+			bool consume = true;
+			ItemLoader.ConsumeItem(item, this, ref consume);
+			if (consume)
+			{
+				item.stack--;
+			}
 			if (item.stack <= 0)
 			{
 				item.type = 0;
@@ -1555,7 +1586,8 @@
 			}
 			for (int i = 0; i < 58; i++)
 			{
-				if (this.inventory[i].stack > 0 && this.inventory[i].type > 0 && this.inventory[i].healMana > 0 && (this.potionDelay == 0 || !this.inventory[i].potion))
+				if (this.inventory[i].stack > 0 && this.inventory[i].type > 0 && this.inventory[i].healMana > 0 && (this.potionDelay == 0 || !this.inventory[i].potion)
+				    && ItemLoader.CanUseItem(this.inventory[i], this))
 				{
 					Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, this.inventory[i].useSound);
 					if (this.inventory[i].potion)
@@ -1571,6 +1603,7 @@
 							this.AddBuff(21, this.potionDelay, true);
 						}
 					}
+					ItemLoader.UseItem(this.inventory[i], this);
 					this.statLife += this.inventory[i].healLife;
 					this.statMana += this.inventory[i].healMana;
 					if (this.statLife > this.statLifeMax2)
@@ -1593,7 +1626,12 @@
 							this.ManaEffect(this.inventory[i].healMana);
 						}
 					}
-					this.inventory[i].stack--;
+					bool consume = true;
+					ItemLoader.ConsumeItem(this.inventory[i], this, ref consume);
+					if (consume)
+					{
+						this.inventory[i].stack--;
+					}
 					if (this.inventory[i].stack <= 0)
 					{
 						this.inventory[i].type = 0;
@@ -1621,7 +1659,7 @@
 				if (this.inventory[i].stack > 0 && this.inventory[i].type > 0 && this.inventory[i].buffType > 0 && !this.inventory[i].summon && this.inventory[i].buffType != 90)
 				{
 					int num2 = this.inventory[i].buffType;
-					bool flag = true;
+					bool flag = ItemLoader.CanUseItem(this.inventory[i], this);
 					for (int j = 0; j < 22; j++)
 					{
 						if (num2 == 27 && (this.buffType[j] == num2 || this.buffType[j] == 101 || this.buffType[j] == 102))
@@ -1688,6 +1726,7 @@
 					}
 					if (flag)
 					{
+						ItemLoader.UseItem(this.inventory[i], this);
 						num = this.inventory[i].useSound;
 						int num3 = this.inventory[i].buffTime;
 						if (num3 == 0)
@@ -1697,7 +1736,12 @@
 						this.AddBuff(num2, num3, true);
 						if (this.inventory[i].consumable)
 						{
-							this.inventory[i].stack--;
+							bool consume = true;
+							ItemLoader.ConsumeItem(this.inventory[i], this, ref consume);
+							if (consume)
+							{
+								this.inventory[i].stack--;
+							}
 							if (this.inventory[i].stack <= 0)
 							{
 								this.inventory[i].type = 0;
@@ -1730,7 +1774,7 @@
 				return;
 			}
 			Item item = null;
-			if (item == null && this.miscEquips[3].mountType != -1 && !MountID.Sets.Cart[this.miscEquips[3].mountType])
+			if (item == null && this.miscEquips[3].mountType != -1 && !MountID.Sets.Cart[this.miscEquips[3].mountType] && ItemLoader.CanUseItem(this.miscEquips[3], this))
 			{
 				item = this.miscEquips[3];
 			}
@@ -1738,7 +1782,7 @@
 			{
 				for (int i = 0; i < 58; i++)
 				{
-					if (this.inventory[i].mountType != -1 && !MountID.Sets.Cart[this.inventory[i].mountType])
+					if (this.inventory[i].mountType != -1 && !MountID.Sets.Cart[this.inventory[i].mountType] && ItemLoader.CanUseItem(this.inventory[i], this))
 					{
 						item = this.inventory[i];
 						break;
@@ -1752,6 +1796,7 @@
 				{
 					Main.PlaySound(2, (int)base.Center.X, (int)base.Center.Y, item.useSound);
 				}
+				ItemLoader.UseItem(item, this);
 			}
 		}
 
@@ -1789,7 +1834,15 @@
 			{
 				return;
 			}
-			if (item.shoot == 73)
+			bool? modCanGrapple = ProjectileLoader.CanUseGrapple(item.shoot, this);
+			if (modCanGrapple.HasValue)
+			{
+				if (!modCanGrapple.Value)
+				{
+					item = null;
+				}
+			}
+			else if (item.shoot == 73)
 			{
 				int num = 0;
 				for (int j = 0; j < 1000; j++)
@@ -1876,7 +1929,10 @@
 				float shootSpeed = item.shootSpeed;
 				int damage = item.damage;
 				float knockBack = item.knockBack;
-				if (num5 == 13 || num5 == 32 || num5 == 315 || (num5 >= 230 && num5 <= 235) || num5 == 331)
+				bool? modSingleHook = ProjectileLoader.SingleGrappleHook(num5, this);
+				bool modSingleHookFalse = modSingleHook.HasValue ? !modSingleHook.Value : false;
+				bool modSingleHookTrue = modSingleHook.HasValue ? modSingleHook.Value : false;
+				if ((num5 == 13 || num5 == 32 || num5 == 315 || (num5 >= 230 && num5 <= 235) || num5 == 331 || modSingleHookTrue) && !modSingleHookFalse)
 				{
 					this.grappling[0] = -1;
 					this.grapCount = 0;
@@ -1884,6 +1940,11 @@
 					{
 						if (Main.projectile[num6].active && Main.projectile[num6].owner == this.whoAmI)
 						{
+							bool? modSingleHook2 = ProjectileLoader.SingleGrappleHook(Main.projectile[num6].type, this);
+							if (modSingleHook2.HasValue && !modSingleHook2.Value)
+							{
+								continue;
+							}
 							if (Main.projectile[num6].type == 13)
 							{
 								Main.projectile[num6].Kill();
@@ -1897,6 +1958,10 @@
 								Main.projectile[num6].Kill();
 							}
 							if (Main.projectile[num6].type >= 230 && Main.projectile[num6].type <= 235)
+							{
+								Main.projectile[num6].Kill();
+							}
+							if (modSingleHook2.HasValue && modSingleHook2.Value)
 							{
 								Main.projectile[num6].Kill();
 							}
@@ -1971,6 +2036,7 @@
 					num5 = 646;
 				}
 				IL_65E:
+				ProjectileLoader.UseGrapple(this, ref num5);
 				Vector2 vector = new Vector2(this.position.X + (float)this.width * 0.5f, this.position.Y + (float)this.height * 0.5f);
 				float num16 = (float)Main.mouseX + Main.screenPosition.X - vector.X;
 				float num17 = (float)Main.mouseY + Main.screenPosition.Y - vector.Y;
@@ -2419,10 +2485,16 @@
 					}
 				}
 			}
+			PlayerHooks.OnHitAnything(this, x, y, victim);
 		}
 
 		public void openPresent()
 		{
+			if (!ItemLoader.PreOpenVanillaBag("present", this, 0))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("present", this, 0);
 			if (Main.rand.Next(15) == 0 && Main.hardMode)
 			{
 				int number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 602, 1, false, 0, false, false);
@@ -2698,6 +2770,11 @@
 
 		public void OpenBossBag(int type)
 		{
+			if (!ItemLoader.PreOpenVanillaBag("bossBag", this, type))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("bossBag", this, type);
 			if (type == 3318)
 			{
 				if (Main.rand.Next(2) == 0)
@@ -3142,6 +3219,7 @@
 			{
 				num14 = 398;
 			}
+			ItemLoader.OpenBossBag(type, this, ref num14);
 			if (num14 > 0)
 			{
 				NPC nPC = new NPC();
@@ -3198,7 +3276,7 @@
 			}
 		}
 
-		private void TryGettingDevArmor()
+		public void TryGettingDevArmor()
 		{
 			if (Main.rand.Next(20) != 0)
 			{
@@ -3287,6 +3365,11 @@
 
 		public void openCrate(int type)
 		{
+			if (!ItemLoader.PreOpenVanillaBag("crate", this, type))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("crate", this, type);
 			int num = type - 2334;
 			if (type >= 3203)
 			{
@@ -4320,6 +4403,11 @@
 
 		public void openLockBox()
 		{
+			if (!ItemLoader.PreOpenVanillaBag("lockBox", this, 0))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("lockBox", this, 0);
 			bool flag = true;
 			while (flag)
 			{
@@ -4454,6 +4542,11 @@
 
 		public void openHerbBag()
 		{
+			if (!ItemLoader.PreOpenVanillaBag("herbBag", this, 0))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("herbBag", this, 0);
 			int num = Main.rand.Next(2, 5);
 			if (Main.rand.Next(3) == 0)
 			{
@@ -4533,6 +4626,11 @@
 
 		public void openGoodieBag()
 		{
+			if (!ItemLoader.PreOpenVanillaBag("goodieBag", this, 0))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("goodieBag", this, 0);
 			if (Main.rand.Next(150) == 0)
 			{
 				int number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1810, 1, false, 0, false, false);
@@ -4954,47 +5052,47 @@
 				int num = i % 10;
 				if (this.dye[num] != null && this.armor[i].type > 0 && this.armor[i].stack > 0 && (i / 10 >= 1 || !this.hideVisual[num] || this.armor[i].wingSlot > 0 || this.armor[i].type == 934))
 				{
-					if (this.armor[i].handOnSlot > 0 && this.armor[i].handOnSlot < 19)
+					if (this.armor[i].handOnSlot > 0)
 					{
 						this.cHandOn = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].handOffSlot > 0 && this.armor[i].handOffSlot < 12)
+					if (this.armor[i].handOffSlot > 0)
 					{
 						this.cHandOff = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].backSlot > 0 && this.armor[i].backSlot < 10)
+					if (this.armor[i].backSlot > 0)
 					{
 						this.cBack = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].frontSlot > 0 && this.armor[i].frontSlot < 5)
+					if (this.armor[i].frontSlot > 0)
 					{
 						this.cFront = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].shoeSlot > 0 && this.armor[i].shoeSlot < 18)
+					if (this.armor[i].shoeSlot > 0)
 					{
 						this.cShoe = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].waistSlot > 0 && this.armor[i].waistSlot < 12)
+					if (this.armor[i].waistSlot > 0)
 					{
 						this.cWaist = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].shieldSlot > 0 && this.armor[i].shieldSlot < 6)
+					if (this.armor[i].shieldSlot > 0)
 					{
 						this.cShield = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].neckSlot > 0 && this.armor[i].neckSlot < 9)
+					if (this.armor[i].neckSlot > 0)
 					{
 						this.cNeck = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].faceSlot > 0 && this.armor[i].faceSlot < 9)
+					if (this.armor[i].faceSlot > 0)
 					{
 						this.cFace = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].balloonSlot > 0 && this.armor[i].balloonSlot < 16)
+					if (this.armor[i].balloonSlot > 0)
 					{
 						this.cBalloon = (int)this.dye[num].dye;
 					}
-					if (this.armor[i].wingSlot > 0 && this.armor[i].wingSlot < 37)
+					if (this.armor[i].wingSlot > 0)
 					{
 						this.cWings = (int)this.dye[num].dye;
 					}
@@ -5043,6 +5141,7 @@
 					{
 						this.buffTime[k]--;
 					}
+					int originalIndex = k;
 					if (this.buffType[k] == 1)
 					{
 						this.lavaImmune = true;
@@ -6583,6 +6682,10 @@
 					else if (this.buffType[k] == 79)
 					{
 						this.meleeEnchant = 8;
+					}
+					if (k == originalIndex)
+					{
+						BuffLoader.Update(this.buffType[k], this, ref k);
 					}
 				}
 			}
@@ -6818,6 +6921,7 @@
 				{
 					this.accDreamCatcher = true;
 				}
+				ItemLoader.UpdateInventory(this.inventory[j], this);
 			}
 			for (int k = 0; k < 8 + this.extraAccessorySlots; k++)
 			{
@@ -7644,6 +7748,7 @@
 					{
 						this.meleeSpeed += 0.04f;
 					}
+					ItemLoader.UpdateEquip(this.armor[k], this);
 				}
 			}
 			bool flag = false;
@@ -8618,7 +8723,7 @@
 					}
 					if (Main.myPlayer == this.whoAmI)
 					{
-						if (this.armor[l].type == 576 && Main.rand.Next(10800) == 0 && Main.curMusic > 0 && Main.curMusic <= 39)
+						if (this.armor[l].type == 576 && Main.rand.Next(10800) == 0 && Main.curMusic > 0)
 						{
 							int num6 = 0;
 							if (Main.curMusic == 1)
@@ -8721,14 +8826,18 @@
 							{
 								this.armor[l].SetDefaults(3371, false);
 							}
-							else if (Main.curMusic > 13)
+							else if (Main.curMusic > 13 && Main.curMusic < Main.maxMusic)
 							{
 								this.armor[l].SetDefaults(1596 + Main.curMusic - 14, false);
 							}
-							else
+							else if (Main.curMusic < Main.maxMusic)
 							{
 								this.armor[l].SetDefaults(num6 + 562, false);
 							}
+							else if (SoundLoader.musicToItem.ContainsKey(Main.curMusic))
+							{
+								this.armor[l].SetDefaults(SoundLoader.musicToItem[Main.curMusic]);
+							}
 						}
 						if (this.armor[l].type >= 562 && this.armor[l].type <= 574)
 						{
@@ -8782,7 +8891,12 @@
 						{
 							Main.musicBox2 = 37;
 						}
-					}
+						if (SoundLoader.itemToMusic.ContainsKey(this.armor[l].type))
+						{
+							Main.musicBox2 = SoundLoader.itemToMusic[this.armor[l].type];
+						}
+					}
+					ItemLoader.UpdateAccessory(this.armor[l], this, this.hideVisual[l]);
 				}
 			}
 			for (int m = 3; m < 8 + this.extraAccessorySlots; m++)
@@ -9390,6 +9504,7 @@
 			{
 				this.DelBuff(this.HasBuff(187));
 			}
+			ItemLoader.UpdateArmorSet(this, this.armor[0], this.armor[1], this.armor[2]);
 		}
 
 		public void UpdateSocialShadow()
@@ -9550,12 +9665,14 @@
 					}
 				}
 			}
+			PlayerHooks.UpdateBiomes(this);
 			this.ManageSpecialBiomeVisuals("Stardust", this.ZoneTowerStardust, value4 - new Vector2(0f, 10f));
 			this.ManageSpecialBiomeVisuals("Nebula", this.ZoneTowerNebula, value3 - new Vector2(0f, 10f));
 			this.ManageSpecialBiomeVisuals("Vortex", this.ZoneTowerVortex, value2 - new Vector2(0f, 10f));
 			this.ManageSpecialBiomeVisuals("Solar", this.ZoneTowerSolar, value - new Vector2(0f, 10f));
 			this.ManageSpecialBiomeVisuals("MoonLord", NPC.AnyNPCs(398), default(Vector2));
 			this.ManageSpecialBiomeVisuals("BloodMoon", Main.bloodMoon, default(Vector2));
+			PlayerHooks.UpdateBiomeVisuals(this);
 			if (!this.dead)
 			{
 				Point point2 = base.Center.ToTileCoordinates();
@@ -9664,6 +9781,7 @@
 			this.trapDebuffSource = false;
 			this.yoraiz0rEye = 0;
 			this.yoraiz0rDarkness = false;
+			PlayerHooks.UpdateDead(this);
 			this.gravDir = 1f;
 			for (int i = 0; i < 22; i++)
 			{
@@ -10040,6 +10158,7 @@
 				flag = true;
 			}
 			IL_360:
+			TileLoader.DisableSmartCursor(Main.tile[num, num2], ref flag);
 			int tileBoost = item.tileBoost;
 			int num3 = 0;
 			if (item.type == 1071 || item.type == 1543 || item.type == 1072 || item.type == 1544)
@@ -10577,11 +10696,11 @@
 				}
 				list11.Clear();
 			}
-			if (item.createTile == 19 && num8 == -1 && num9 == -1)
+			if (TileLoader.IsPlatform(item.createTile) && num8 == -1 && num9 == -1)
 			{
 				List<Tuple<int, int>> list12 = new List<Tuple<int, int>>();
 				bool flag3 = false;
-				if (Main.tile[num, num2].active() && Main.tile[num, num2].type == 19)
+				if (Main.tile[num, num2].active() && TileLoader.IsPlatform(Main.tile[num, num2].type))
 				{
 					flag3 = true;
 				}
@@ -10592,7 +10711,7 @@
 						for (int num61 = num6; num61 <= num7; num61++)
 						{
 							Tile tile4 = Main.tile[num60, num61];
-							if (tile4.active() && tile4.type == 19)
+							if (tile4.active() && TileLoader.IsPlatform(tile4.type))
 							{
 								int num62 = (int)tile4.slope();
 								if (num62 != 2 && !Main.tile[num60 - 1, num61 - 1].active())
@@ -11648,7 +11767,7 @@
 					{
 						num7 = this.inventory[i].tileBoost;
 					}
-					if ((this.inventory[i].type == 424 || this.inventory[i].type == 1103) && num8 == -10)
+					if (ItemID.Sets.ExtractinatorMode[this.inventory[i].type] >= 0 && num8 == -10)
 					{
 						num8 = this.inventory[i].tileBoost;
 					}
@@ -11728,12 +11847,26 @@
 						num = 5;
 					}
 				}
+				int modSelect = TileLoader.AutoSelect(num2, num3, this);
+				if (modSelect >= 0)
+				{
+					if (this.nonTorch == -1)
+					{
+						this.nonTorch = this.selectedItem;
+					}
+					this.selectedItem = modSelect;
+					return;
+				}
 				for (int j = 0; j < 50; j++)
 				{
 					int type2 = this.inventory[j].type;
+					bool dryTorch = false;
+					bool wetTorch = false;
+					bool glowstick = false;
+					ItemLoader.AutoLightSelect(this.inventory[j], ref dryTorch, ref wetTorch, ref glowstick);
 					if (num == 0)
 					{
-						if (type2 == 8 || type2 == 427 || type2 == 428 || type2 == 429 || type2 == 430 || type2 == 431 || type2 == 432 || type2 == 433 || type2 == 523 || type2 == 974 || type2 == 1245 || type2 == 1333 || type2 == 2274 || type2 == 3004 || type2 == 3045 || type2 == 3114)
+						if (type2 == 8 || type2 == 427 || type2 == 428 || type2 == 429 || type2 == 430 || type2 == 431 || type2 == 432 || type2 == 433 || type2 == 523 || type2 == 974 || type2 == 1245 || type2 == 1333 || type2 == 2274 || type2 == 3004 || type2 == 3045 || type2 == 3114 || dryTorch || wetTorch)
 						{
 							if (this.nonTorch == -1)
 							{
@@ -11742,7 +11875,7 @@
 							this.selectedItem = j;
 							return;
 						}
-						if (type2 == 282 || type2 == 286 || type2 == 3002 || type2 == 3112)
+						if (type2 == 282 || type2 == 286 || type2 == 3002 || type2 == 3112 || glowstick)
 						{
 							if (this.nonTorch == -1)
 							{
@@ -11789,20 +11922,20 @@
 					}
 					else if (num == 4)
 					{
-						if (this.inventory[j].type != 282 && this.inventory[j].type != 286 && this.inventory[j].type != 3002 && this.inventory[j].type != 3112 && this.inventory[j].type != 930 && (type2 == 8 || type2 == 427 || type2 == 428 || type2 == 429 || type2 == 430 || type2 == 431 || type2 == 432 || type2 == 433 || type2 == 974 || type2 == 1245 || type2 == 2274 || type2 == 3004 || type2 == 3045 || type2 == 3114))
+						if (this.inventory[j].type != 282 && this.inventory[j].type != 286 && this.inventory[j].type != 3002 && this.inventory[j].type != 3112 && this.inventory[j].type != 930 && !glowstick && (type2 == 8 || type2 == 427 || type2 == 428 || type2 == 429 || type2 == 430 || type2 == 431 || type2 == 432 || type2 == 433 || type2 == 974 || type2 == 1245 || type2 == 2274 || type2 == 3004 || type2 == 3045 || type2 == 3114 || dryTorch))
 						{
 							if (this.nonTorch == -1)
 							{
 								this.nonTorch = this.selectedItem;
 							}
-							if (this.inventory[this.selectedItem].createTile != 4)
+							if (!TileLoader.IsTorch(this.inventory[this.selectedItem].createTile))
 							{
 								this.selectedItem = j;
 							}
 						}
 						else
 						{
-							if ((type2 == 282 || type2 == 286 || type2 == 3002 || type2 == 3112) && flag2)
+							if ((type2 == 282 || type2 == 286 || type2 == 3002 || type2 == 3112 || glowstick) && flag2)
 							{
 								if (this.nonTorch == -1)
 								{
@@ -11832,7 +11965,7 @@
 									return;
 								}
 							}
-							else if (type2 == 1333 || type2 == 523)
+							else if (type2 == 1333 || type2 == 523 || wetTorch)
 							{
 								if (this.nonTorch == -1)
 								{
@@ -11845,13 +11978,13 @@
 					}
 					else if (num == 5)
 					{
-						if (type2 == 8 || type2 == 427 || type2 == 428 || type2 == 429 || type2 == 430 || type2 == 431 || type2 == 432 || type2 == 433 || type2 == 523 || type2 == 974 || type2 == 1245 || type2 == 1333 || type2 == 2274 || type2 == 3004 || type2 == 3045 || type2 == 3114)
+						if (type2 == 8 || type2 == 427 || type2 == 428 || type2 == 429 || type2 == 430 || type2 == 431 || type2 == 432 || type2 == 433 || type2 == 523 || type2 == 974 || type2 == 1245 || type2 == 1333 || type2 == 2274 || type2 == 3004 || type2 == 3045 || type2 == 3114 || dryTorch || wetTorch)
 						{
 							if (this.nonTorch == -1)
 							{
 								this.nonTorch = this.selectedItem;
 							}
-							if (this.inventory[this.selectedItem].createTile != 4)
+							if (!TileLoader.IsTorch(this.inventory[this.selectedItem].createTile))
 							{
 								this.selectedItem = j;
 							}
@@ -11877,7 +12010,7 @@
 								return;
 							}
 						}
-						else if (type2 == 282 || type2 == 286 || type2 == 3002 || type2 == 3112)
+						else if (type2 == 282 || type2 == 286 || type2 == 3002 || type2 == 3112 || glowstick)
 						{
 							if (this.nonTorch == -1)
 							{
@@ -12204,6 +12337,7 @@
 				Player.tileRangeY = 4;
 			}
 			this.mount.CheckMountBuff(this);
+			PlayerHooks.ResetEffects(this);
 		}
 
 		public void UpdateImmunity()
@@ -12331,6 +12465,7 @@
 				this.lifeRegenTime = 0;
 				this.lifeRegen -= 100;
 			}
+			PlayerHooks.UpdateBadLifeRegen(this);
 			if (this.honey && this.lifeRegen < 0)
 			{
 				this.lifeRegen += 4;
@@ -12384,6 +12519,7 @@
 			{
 				this.lifeRegen += 2;
 			}
+			PlayerHooks.UpdateLifeRegen(this);
 			if (this.bleed)
 			{
 				this.lifeRegenTime = 0;
@@ -12481,6 +12617,7 @@
 					num2 /= 2f;
 				}
 			}
+			PlayerHooks.NaturalLifeRegen(this, ref num2);
 			float num4 = (float)this.statLifeMax2 / 400f * 0.85f + 0.15f;
 			num2 *= num4;
 			this.lifeRegen += (int)Math.Round((double)num2);
@@ -14417,6 +14554,7 @@
 				num3 = 1.5f;
 				num = 0.125f;
 			}
+			ItemLoader.VerticalWingSpeeds(this, ref num2, ref num5, ref num4, ref num3, ref num);
 			this.velocity.Y = this.velocity.Y - num * this.gravDir;
 			if (this.gravDir == 1f)
 			{
@@ -15524,7 +15662,7 @@
 			{
 				num3 = -1;
 			}
-			if (!this.wet && !this.mount.Cart && (num3 == 147 || num3 == 25 || num3 == 53 || num3 == 189 || num3 == 0 || num3 == 123 || num3 == 57 || num3 == 112 || num3 == 116 || num3 == 196 || num3 == 193 || num3 == 195 || num3 == 197 || num3 == 199 || num3 == 229 || num3 == 371))
+			if (!this.wet && !this.mount.Cart && (num3 == 147 || num3 == 25 || num3 == 53 || num3 == 189 || num3 == 0 || num3 == 123 || num3 == 57 || num3 == 112 || num3 == 116 || num3 == 196 || num3 == 193 || num3 == 195 || num3 == 197 || num3 == 199 || num3 == 229 || num3 == 371 || TileLoader.HasWalkDust(num3)))
 			{
 				int num4 = 1;
 				if (Falling)
@@ -15624,6 +15762,7 @@
 					{
 						newColor = new Color(97, 200, 255, 100);
 					}
+					TileLoader.WalkDust(num3, ref num5, ref flag, ref newColor);
 					if (!Falling)
 					{
 						float num6 = Math.Abs(this.velocity.X) / 3f;
@@ -15930,6 +16069,7 @@
 			{
 				return;
 			}
+			PlayerHooks.PreUpdate(this);
 			this.miscCounter++;
 			if (this.miscCounter >= 300)
 			{
@@ -16141,6 +16281,7 @@
 										this.mapStyle = true;
 									}
 								}
+								ModHooks.HotKeyPressed(a);
 							}
 						}
 						if (Main.gamePad)
@@ -16460,6 +16601,7 @@
 					{
 						this.controlUseTile = true;
 					}
+					PlayerHooks.SetControls(this);
 					if (this.controlInv)
 					{
 						if (this.releaseInventory)
@@ -17081,11 +17223,13 @@
 					this.AddBuff(147, 2, false);
 				}
 			}
-			for (int num29 = 0; num29 < 191; num29++)
+			PlayerHooks.PreUpdateBuffs(this);
+			for (int num29 = 0; num29 < BuffLoader.BuffCount(); num29++)
 			{
 				this.buffImmune[num29] = false;
 			}
 			this.UpdateBuffs(i);
+			PlayerHooks.PostUpdateBuffs(this);
 			if (this.whoAmI == Main.myPlayer)
 			{
 				if (!this.onFire && !this.poisoned)
@@ -17367,6 +17511,7 @@
 				}
 			}
 			this.UpdateArmorSets(i);
+			PlayerHooks.PostUpdateEquips(this);
 			if ((this.merman || this.forceMerman) && flag18)
 			{
 				this.wings = 0;
@@ -17600,6 +17745,7 @@
 				this.moveSpeed *= 0.75f;
 			}
 			this.meleeSpeed = 1f / this.meleeSpeed;
+			PlayerHooks.PostUpdateMiscEffects(this);
 			this.UpdateLifeRegen();
 			this.soulDrain = 0;
 			this.UpdateManaRegen();
@@ -18139,6 +18285,7 @@
 					{
 						this.accRunSpeed = 7f;
 					}
+					ItemLoader.HorizontalWingSpeeds(this);
 				}
 				if (this.sticky)
 				{
@@ -18256,6 +18403,7 @@
 						this.mount.UpdateDrill(this, this.controlUp, this.controlDown);
 					}
 				}
+				PlayerHooks.PostUpdateRunSpeeds(this);
 				this.HorizontalMovement();
 				if (this.gravControl)
 				{
@@ -18379,6 +18527,7 @@
 				}
 				else
 				{
+					ItemLoader.WingUpdate(this, flag24);
 					if (flag24)
 					{
 						if (this.wings == 10 && Main.rand.Next(2) == 0)
@@ -20175,7 +20324,7 @@
 							this.showItemIcon = true;
 							this.showItemIcon2 = 2738;
 						}
-						if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 219 && (this.inventory[this.selectedItem].type == 424 || this.inventory[this.selectedItem].type == 1103))
+						if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 219 && ItemID.Sets.ExtractinatorMode[this.inventory[this.selectedItem].type] > -1)
 						{
 							this.noThrow = 2;
 							this.showItemIcon = true;
@@ -20501,6 +20650,7 @@
 							this.showItemIcon = true;
 							this.showItemIcon2 = (int)(583 + Main.tile[Player.tileTargetX, Player.tileTargetY].frameX / 18);
 						}
+						TileLoader.MouseOver(Player.tileTargetX, Player.tileTargetY);
 						if (this.controlUseTile)
 						{
 							if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 212 && this.launcherWait <= 0)
@@ -20570,7 +20720,8 @@
 									Wiring.HitSwitch(Player.tileTargetX, Player.tileTargetY);
 									NetMessage.SendData(59, -1, -1, "", Player.tileTargetX, (float)Player.tileTargetY, 0f, 0f, 0, 0, 0);
 								}
-								else if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 139)
+								else if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 139
+								         || TileLoader.IsModMusicBox(Main.tile[Player.tileTargetX, Player.tileTargetY]))
 								{
 									Main.PlaySound(28, Player.tileTargetX * 16, Player.tileTargetY * 16, 0);
 									WorldGen.SwitchMB(Player.tileTargetX, Player.tileTargetY);
@@ -20660,7 +20811,7 @@
 										Projectile.NewProjectile((float)(num182 * 16 + 8), (float)(num183 * 16 + 2), 0f, 0f, 419 + Main.rand.Next(4), 0, 0f, this.whoAmI, (float)num182, (float)num183);
 									}
 								}
-								else if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 4 || Main.tile[Player.tileTargetX, Player.tileTargetY].type == 13 || Main.tile[Player.tileTargetX, Player.tileTargetY].type == 33 || Main.tile[Player.tileTargetX, Player.tileTargetY].type == 49 || (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 50 && Main.tile[Player.tileTargetX, Player.tileTargetY].frameX == 90) || Main.tile[Player.tileTargetX, Player.tileTargetY].type == 174)
+								else if (TileLoader.IsTorch(Main.tile[Player.tileTargetX, Player.tileTargetY].type) || Main.tile[Player.tileTargetX, Player.tileTargetY].type == 13 || Main.tile[Player.tileTargetX, Player.tileTargetY].type == 33 || Main.tile[Player.tileTargetX, Player.tileTargetY].type == 49 || (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 50 && Main.tile[Player.tileTargetX, Player.tileTargetY].frameX == 90) || Main.tile[Player.tileTargetX, Player.tileTargetY].type == 174)
 								{
 									WorldGen.KillTile(Player.tileTargetX, Player.tileTargetY, false, false, false);
 									if (Main.netMode == 1)
@@ -20934,11 +21085,11 @@
 										}
 									}
 								}
-								else if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 10)
+								else if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == TileID.ClosedDoor || TileLoader.OpenDoorID(Main.tile[Player.tileTargetX, Player.tileTargetY]) >= 0)
 								{
 									int num207 = Player.tileTargetX;
 									int num208 = Player.tileTargetY;
-									if (Main.tile[num207, num208].frameY >= 594 && Main.tile[num207, num208].frameY <= 646)
+									if (Main.tile[num207, num208].type == TileID.ClosedDoor && Main.tile[num207, num208].frameY >= 594 && Main.tile[num207, num208].frameY <= 646)
 									{
 										int num209 = 1141;
 										for (int num210 = 0; num210 < 58; num210++)
@@ -20964,7 +21115,7 @@
 										NetMessage.SendData(19, -1, -1, "", 0, (float)Player.tileTargetX, (float)Player.tileTargetY, (float)this.direction, 0, 0, 0);
 									}
 								}
-								else if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 11 && WorldGen.CloseDoor(Player.tileTargetX, Player.tileTargetY, false))
+								else if (TileLoader.CloseDoorID(Main.tile[Player.tileTargetX, Player.tileTargetY]) >= 0 && WorldGen.CloseDoor(Player.tileTargetX, Player.tileTargetY, false))
 								{
 									NetMessage.SendData(19, -1, -1, "", 1, (float)Player.tileTargetX, (float)Player.tileTargetY, (float)this.direction, 0, 0, 0);
 								}
@@ -21238,6 +21389,7 @@
 										Projectile.NewProjectile(vector4.X, vector4.Y, 0f, 0f, 403, 0, 0f, this.whoAmI, 0f, 0f);
 									}
 								}
+								TileLoader.RightClick(Player.tileTargetX, Player.tileTargetY);
 							}
 							this.releaseUseTile = false;
 						}
@@ -21355,6 +21507,7 @@
 							this.showItemIcon2 = -1;
 						}
 					}
+					TileLoader.MouseOverFar(Player.tileTargetX, Player.tileTargetY);
 				}
 			}
 			if (this.tongued)
@@ -21587,7 +21740,8 @@
 						{
 							num250 = 1;
 						}
-						if ((num250 != -1 || !this.immune) && (this.dash != 2 || num249 != this.eocHit || this.eocDash <= 0) && !this.npcTypeNoAggro[Main.npc[num249].type])
+						if (NPCLoader.CanHitPlayer(Main.npc[num249], this, ref num250) && PlayerHooks.CanBeHitByNPC(this, Main.npc[num249], ref num250)
+						    && (num250 != -1 || !this.immune) && (this.dash != 2 || num249 != this.eocHit || this.eocDash <= 0) && !this.npcTypeNoAggro[Main.npc[num249].type])
 						{
 							float num251 = 1f;
 							Rectangle value6 = new Rectangle((int)Main.npc[num249].position.X, (int)Main.npc[num249].position.Y, Main.npc[num249].width, Main.npc[num249].height);
@@ -21678,6 +21832,9 @@
 										num255 = (int)((double)num255 * 0.75);
 									}
 								}
+								bool crit = false;
+								NPCLoader.ModifyHitPlayer(Main.npc[num249], this, ref num255, ref crit);
+								PlayerHooks.ModifyHitByNPC(this, Main.npc[num249], ref num255, ref crit);
 								if (this.whoAmI == Main.myPlayer && this.thorns > 0f && !this.immune && !Main.npc[num249].dontTakeDamage)
 								{
 									int num257 = (int)((float)num255 * this.thorns);
@@ -21700,7 +21857,9 @@
 								{
 									this.StatusPlayer(Main.npc[num249]);
 								}
-								this.Hurt(num255, num254, false, false, Lang.deathMsg(-1, num249, -1, -1), false, num250);
+								int realDamage = (int)this.Hurt(num255, num254, false, false, Lang.deathMsg(-1, num249, -1, -1), crit, num250);
+								NPCLoader.OnHitPlayer(Main.npc[num249], this, realDamage, crit);
+								PlayerHooks.OnHitByNPC(this, Main.npc[num249], realDamage, crit);
 							}
 						}
 					}
@@ -22242,7 +22401,8 @@
 			this.BordersMovement();
 			this.numMinions = 0;
 			this.slotsMinions = 0f;
-			if (this.altFunctionUse == 0 && this.selectedItem != 58 && this.controlUseTile && this.releaseUseItem && !this.controlUseItem && !this.mouseInterface && !CaptureManager.Instance.Active && this.inventory[this.selectedItem].type == 3384)
+			if (this.altFunctionUse == 0 && this.selectedItem != 58 && this.controlUseTile && this.releaseUseItem && !this.controlUseItem && !this.mouseInterface && !CaptureManager.Instance.Active
+			    && (this.inventory[this.selectedItem].type == 3384 || ItemLoader.AltFunctionUse(this.inventory[this.selectedItem], this)))
 			{
 				this.altFunctionUse = 1;
 				this.controlUseItem = true;
@@ -22280,6 +22440,7 @@
 			}
 			this.grappling[0] = -1;
 			this.grapCount = 0;
+			PlayerHooks.PostUpdate(this);
 		}
 
 		private void TryLandingOnDetonator()
@@ -22357,10 +22518,20 @@
 					{
 						num += 100;
 					}
+					ItemLoader.GrabRange(Main.item[j], this, ref num);
 					if (new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height).Intersects(new Rectangle((int)Main.item[j].position.X, (int)Main.item[j].position.Y, Main.item[j].width, Main.item[j].height)))
 					{
 						if (i == Main.myPlayer && (this.inventory[this.selectedItem].type != 0 || this.itemAnimation <= 0))
 						{
+							if (!ItemLoader.OnPickup(Main.item[j], this))
+							{
+								Main.item[j] = new Item();
+								if (Main.netMode == 1)
+								{
+									NetMessage.SendData(21, -1, -1, "", j, 0f, 0f, 0f, 0, 0, 0);
+								}
+								continue;
+							}
 							if (ItemID.Sets.NebulaPickup[Main.item[j].type])
 							{
 								Main.PlaySound(7, (int)this.position.X, (int)this.position.Y, 1);
@@ -22425,7 +22596,10 @@
 					else if (new Rectangle((int)this.position.X - num, (int)this.position.Y - num, this.width + num * 2, this.height + num * 2).Intersects(new Rectangle((int)Main.item[j].position.X, (int)Main.item[j].position.Y, Main.item[j].width, Main.item[j].height)) && this.ItemSpace(Main.item[j]))
 					{
 						Main.item[j].beingGrabbed = true;
-						if (this.manaMagnet && (Main.item[j].type == 184 || Main.item[j].type == 1735 || Main.item[j].type == 1868))
+						if (ItemLoader.GrabStyle(Main.item[j], this))
+						{
+						}
+						else if (this.manaMagnet && (Main.item[j].type == 184 || Main.item[j].type == 1735 || Main.item[j].type == 1868))
 						{
 							float num3 = 12f;
 							Vector2 vector = new Vector2(Main.item[j].position.X + (float)(Main.item[j].width / 2), Main.item[j].position.Y + (float)(Main.item[j].height / 2));
@@ -23150,7 +23324,7 @@
 		{
 			int num = 4;
 			int num2 = 3;
-			for (int i = 0; i < 419; i++)
+			for (int i = 0; i < this.adjTile.Length; i++)
 			{
 				this.oldAdjTile[i] = this.adjTile[i];
 				this.adjTile[i] = false;
@@ -23198,6 +23372,7 @@
 							this.adjTile[14] = true;
 							this.alchemyTable = true;
 						}
+						TileLoader.AdjTiles(this, Main.tile[j, k].type);
 					}
 					if (Main.tile[j, k].liquid > 200 && Main.tile[j, k].liquidType() == 0)
 					{
@@ -23216,7 +23391,7 @@
 			if (Main.playerInventory)
 			{
 				bool flag = false;
-				for (int l = 0; l < 419; l++)
+				for (int l = 0; l < this.adjTile.Length; l++)
 				{
 					if (this.oldAdjTile[l] != this.adjTile[l])
 					{
@@ -23467,6 +23642,7 @@
 			{
 				this.boneArmor = true;
 			}
+			ItemLoader.PreUpdateVanitySet(this);
 			if (this.wings > 0)
 			{
 				this.back = -1;
@@ -23484,6 +23660,8 @@
 			{
 				return;
 			}
+			PlayerHooks.FrameEffects(this);
+			ItemLoader.UpdateVanity(this);
 			if (((this.body == 68 && this.legs == 57 && this.head == 106) || (this.body == 74 && this.legs == 63 && this.head == 106)) && Main.rand.Next(10) == 0)
 			{
 				int num2 = Dust.NewDust(new Vector2(this.position.X - this.velocity.X * 2f, this.position.Y - 2f - this.velocity.Y * 2f), this.width, this.height, 43, 0f, 0f, 100, new Color(255, 0, 255), 0.3f);
@@ -23623,6 +23801,7 @@
 					}
 				}
 			}
+			ItemLoader.UpdateVanitySet(this);
 			this.bodyFrame.Width = 40;
 			this.bodyFrame.Height = 56;
 			this.legFrame.Width = 40;
@@ -23843,6 +24022,10 @@
 							}
 						}
 					}
+					else if (ItemLoader.UseItemFrame(this.inventory[this.selectedItem], this))
+					{
+						return;
+					}
 				}
 			}
 			else
@@ -23878,6 +24061,10 @@
 					if (this.inventory[this.selectedItem].holdStyle == 3)
 					{
 						this.bodyFrame.Y = this.bodyFrame.Height * 3;
+						return;
+					}
+					if (ItemLoader.HoldItemFrame(this.inventory[this.selectedItem], this))
+					{
 						return;
 					}
 					if (this.grappling[0] >= 0)
@@ -24144,6 +24331,7 @@
 						break;
 				}
 			}
+			ItemLoader.SetMatch(type, male, ref num, ref somethingSpecial);
 			return num;
 		}
 
@@ -24433,6 +24621,14 @@
 				this.ShadowDodge();
 				return 0.0;
 			}
+			bool customDamage = false;
+			bool playSound = true;
+			bool genGore = true;
+			if (!PlayerHooks.PreHurt(this, pvp, quiet, ref Damage, ref hitDirection, ref Crit, ref customDamage,
+				    ref playSound, ref genGore, ref deathText))
+			{
+				return 0.0;
+			}
 			if (this.whoAmI == Main.myPlayer && this.panic)
 			{
 				this.AddBuff(63, 300, true);
@@ -24443,7 +24639,7 @@
 				NetMessage.SendData(84, -1, -1, "", this.whoAmI, 0f, 0f, 0f, 0, 0, 0);
 			}
 			int num = Damage;
-			double num2 = Main.CalculatePlayerDamage(num, this.statDefense);
+			double num2 = customDamage ? num : Main.CalculatePlayerDamage(num, this.statDefense);
 			if (Crit)
 			{
 				num *= 2;
@@ -24564,6 +24760,7 @@
 					}
 					Projectile.NewProjectile(base.Center.X + (float)Main.rand.Next(-40, 40), base.Center.Y - (float)Main.rand.Next(20, 60), this.velocity.X * 0.3f, this.velocity.Y * 0.3f, 565, 0, 0f, this.whoAmI, 0f, 0f);
 				}
+				PlayerHooks.Hurt(this, pvp, quiet, num2, hitDirection, Crit);
 				if (Main.netMode == 1 && this.whoAmI == Main.myPlayer && !quiet)
 				{
 					int number = 0;
@@ -24679,6 +24876,10 @@
 					this.velocity.X = 4.5f * (float)hitDirection;
 					this.velocity.Y = -3.5f;
 				}
+				if (!playSound)
+				{
+					goto postSound; //gotos are ugly but minimize the diff file
+				}
 				if (this.stoned)
 				{
 					Main.PlaySound(0, (int)this.position.X, (int)this.position.Y, 1);
@@ -24703,8 +24904,13 @@
 				{
 					Main.PlaySound(1, (int)this.position.X, (int)this.position.Y, 1);
 				}
+				postSound:
 				if (this.statLife > 0)
 				{
+					if (!genGore)
+					{
+						goto postGore; //gotta minimize diff files
+					}
 					int num21 = 0;
 					while ((double)num21 < num2 / (double)this.statLifeMax2 * 100.0)
 					{
@@ -24728,6 +24934,8 @@
 						}
 						num21++;
 					}
+					postGore:
+					PlayerHooks.PostHurt(this, pvp, quiet, num2, hitDirection, Crit);
 				}
 				else
 				{
@@ -24762,6 +24970,12 @@
 		public void KillMe(double dmg, int hitDirection, bool pvp = false, string deathText = " was slain...")
 		{
 			if (this.dead)
+			{
+				return;
+			}
+			bool playSound = true;
+			bool genGore = true;
+			if (!PlayerHooks.PreKill(this, dmg, hitDirection, pvp, ref playSound, ref genGore, ref deathText))
 			{
 				return;
 			}
@@ -24823,19 +25037,26 @@
 					this.KillMeForGood();
 				}
 			}
-			Main.PlaySound(5, (int)this.position.X, (int)this.position.Y, 1);
+			if (playSound)
+			{
+				Main.PlaySound(5, (int)this.position.X, (int)this.position.Y, 1);
+			}
 			this.headVelocity.Y = (float)Main.rand.Next(-40, -10) * 0.1f;
 			this.bodyVelocity.Y = (float)Main.rand.Next(-40, -10) * 0.1f;
 			this.legVelocity.Y = (float)Main.rand.Next(-40, -10) * 0.1f;
 			this.headVelocity.X = (float)Main.rand.Next(-20, 21) * 0.1f + (float)(2 * hitDirection);
 			this.bodyVelocity.X = (float)Main.rand.Next(-20, 21) * 0.1f + (float)(2 * hitDirection);
 			this.legVelocity.X = (float)Main.rand.Next(-20, 21) * 0.1f + (float)(2 * hitDirection);
-			if (this.stoned)
+			if (this.stoned || !genGore)
 			{
 				this.headPosition = Vector2.Zero;
 				this.bodyPosition = Vector2.Zero;
 				this.legPosition = Vector2.Zero;
 			}
+			if (!genGore)
+			{
+				goto postGore; //goto minimizes diff file size
+			}
 			for (int j = 0; j < 100; j++)
 			{
 				if (this.stoned)
@@ -24857,6 +25078,7 @@
 					Dust.NewDust(this.position, this.width, this.height, 5, (float)(2 * hitDirection), -2f, 0, default(Color), 1f);
 				}
 			}
+			postGore:
 			this.mount.Dismount(this);
 			this.dead = true;
 			this.respawnTimer = 600;
@@ -24880,6 +25102,7 @@
 			{
 				this.respawnTimer = (int)((double)this.respawnTimer * 1.5);
 			}
+			PlayerHooks.Kill(this, dmg, hitDirection, pvp, deathText);
 			this.immuneAlpha = 0;
 			this.palladiumRegen = false;
 			this.iceBarrier = false;
@@ -25596,7 +25819,10 @@
 					bool flag3 = false;
 					bool flag4 = false;
 					TileObject tileObject = default(TileObject);
-					if (TileObjectData.CustomPlace(this.inventory[this.selectedItem].createTile, this.inventory[this.selectedItem].placeStyle) && this.inventory[this.selectedItem].createTile != 82)
+					if (!TileLoader.CanPlace(Player.tileTargetX, Player.tileTargetY))
+					{
+					}
+					else if (TileObjectData.CustomPlace(this.inventory[this.selectedItem].createTile, this.inventory[this.selectedItem].placeStyle) && this.inventory[this.selectedItem].createTile != 82)
 					{
 						flag4 = true;
 						flag3 = TileObject.CanPlace(Player.tileTargetX, Player.tileTargetY, (int)((ushort)this.inventory[this.selectedItem].createTile), this.inventory[this.selectedItem].placeStyle, this.direction, out tileObject, false);
@@ -25637,7 +25863,7 @@
 								flag3 = true;
 							}
 						}
-						else if (this.inventory[this.selectedItem].createTile == 4 || this.inventory[this.selectedItem].createTile == 136)
+						else if (TileLoader.IsTorch(this.inventory[this.selectedItem].createTile) || this.inventory[this.selectedItem].createTile == 136)
 						{
 							if (Main.tile[Player.tileTargetX, Player.tileTargetY].wall > 0)
 							{
@@ -25649,7 +25875,7 @@
 								{
 									if (!WorldGen.SolidTileNoAttach(Player.tileTargetX, Player.tileTargetY + 1) && (Main.tile[Player.tileTargetX, Player.tileTargetY + 1].halfBrick() || Main.tile[Player.tileTargetX, Player.tileTargetY + 1].slope() != 0))
 									{
-										if (Main.tile[Player.tileTargetX, Player.tileTargetY + 1].type != 19)
+										if (!TileLoader.IsPlatform(Main.tile[Player.tileTargetX, Player.tileTargetY + 1].type))
 										{
 											WorldGen.SlopeTile(Player.tileTargetX, Player.tileTargetY + 1, 0);
 											if (Main.netMode == 1)
@@ -25660,7 +25886,7 @@
 									}
 									else if (!WorldGen.SolidTileNoAttach(Player.tileTargetX, Player.tileTargetY + 1) && !WorldGen.SolidTileNoAttach(Player.tileTargetX - 1, Player.tileTargetY) && (Main.tile[Player.tileTargetX - 1, Player.tileTargetY].halfBrick() || Main.tile[Player.tileTargetX - 1, Player.tileTargetY].slope() != 0))
 									{
-										if (Main.tile[Player.tileTargetX, Player.tileTargetY + 1].type != 19)
+										if (!TileLoader.IsPlatform(Main.tile[Player.tileTargetX, Player.tileTargetY + 1].type))
 										{
 											WorldGen.SlopeTile(Player.tileTargetX - 1, Player.tileTargetY, 0);
 											if (Main.netMode == 1)
@@ -25669,7 +25895,7 @@
 											}
 										}
 									}
-									else if (!WorldGen.SolidTileNoAttach(Player.tileTargetX, Player.tileTargetY + 1) && !WorldGen.SolidTileNoAttach(Player.tileTargetX - 1, Player.tileTargetY) && !WorldGen.SolidTileNoAttach(Player.tileTargetX + 1, Player.tileTargetY) && (Main.tile[Player.tileTargetX + 1, Player.tileTargetY].halfBrick() || Main.tile[Player.tileTargetX + 1, Player.tileTargetY].slope() != 0) && Main.tile[Player.tileTargetX, Player.tileTargetY + 1].type != 19)
+									else if (!WorldGen.SolidTileNoAttach(Player.tileTargetX, Player.tileTargetY + 1) && !WorldGen.SolidTileNoAttach(Player.tileTargetX - 1, Player.tileTargetY) && !WorldGen.SolidTileNoAttach(Player.tileTargetX + 1, Player.tileTargetY) && (Main.tile[Player.tileTargetX + 1, Player.tileTargetY].halfBrick() || Main.tile[Player.tileTargetX + 1, Player.tileTargetY].slope() != 0) && !TileLoader.IsPlatform(Main.tile[Player.tileTargetX, Player.tileTargetY + 1].type))
 									{
 										WorldGen.SlopeTile(Player.tileTargetX + 1, Player.tileTargetY, 0);
 										if (Main.netMode == 1)
@@ -25717,7 +25943,7 @@
 								{
 									num44 = -1;
 								}
-								if (num38 >= 0 && Main.tileSolid[num38] && (!Main.tileNoAttach[num38] || num38 == 19))
+								if (num38 >= 0 && Main.tileSolid[num38] && (!Main.tileNoAttach[num38] || TileLoader.IsPlatform(num38)))
 								{
 									flag3 = true;
 								}
@@ -25851,7 +26077,7 @@
 								flag3 = false;
 							}
 						}
-						if (!flag3 && this.inventory[this.selectedItem].createTile == 19)
+						if (!flag3 && TileLoader.IsPlatform(this.inventory[this.selectedItem].createTile))
 						{
 							for (int num49 = Player.tileTargetX - 1; num49 <= Player.tileTargetX + 1; num49++)
 							{
@@ -26026,7 +26252,7 @@
 									NetMessage.SendTileSquare(-1, Player.tileTargetX, Player.tileTargetY, 1);
 								}
 							}
-							if (this.inventory[this.selectedItem].createTile == 19 && Main.smartDigEnabled)
+							if (TileLoader.IsPlatform(this.inventory[this.selectedItem].createTile) && Main.smartDigEnabled)
 							{
 								int num58 = Player.tileTargetX;
 								int num59 = Player.tileTargetY;
@@ -26038,7 +26264,7 @@
 								{
 									for (int num64 = -1; num64 < 2; num64++)
 									{
-										if ((num63 != 0 || num64 != 0) && Main.tile[num58 + num63, num59 + num64].type == 19)
+										if ((num63 != 0 || num64 != 0) && TileLoader.IsPlatform(Main.tile[num58 + num63, num59 + num64].type))
 										{
 											flag7 = false;
 										}
@@ -26047,22 +26273,22 @@
 								if (!flag7)
 								{
 									Tile tile6 = Main.tile[num58 - 1, num59 - 1];
-									if (tile6.active() && tile6.type == 19 && tile6.slope() != 2)
+									if (tile6.active() && TileLoader.IsPlatform(tile6.type) && tile6.slope() != 2)
 									{
 										num61++;
 									}
 									tile6 = Main.tile[num58 - 1, num59 + 1];
-									if (tile6.active() && tile6.type == 19 && tile6.slope() != 1)
+									if (tile6.active() && TileLoader.IsPlatform(tile6.type) && tile6.slope() != 1)
 									{
 										num62++;
 									}
 									tile6 = Main.tile[num58 + 1, num59 - 1];
-									if (tile6.active() && tile6.type == 19 && tile6.slope() != 1)
+									if (tile6.active() && TileLoader.IsPlatform(tile6.type) && tile6.slope() != 1)
 									{
 										num62++;
 									}
 									tile6 = Main.tile[num58 + 1, num59 + 1];
-									if (tile6.active() && tile6.type == 19 && tile6.slope() != 2)
+									if (tile6.active() && TileLoader.IsPlatform(tile6.type) && tile6.slope() != 2)
 									{
 										num61++;
 									}
@@ -26070,7 +26296,7 @@
 									if (WorldGen.SolidTile(tile6))
 									{
 										num61++;
-										if (tile6.type == 19 && tile6.slope() == 0)
+										if (TileLoader.IsPlatform(tile6.type) && tile6.slope() == 0)
 										{
 											num61++;
 										}
@@ -26079,7 +26305,7 @@
 									if (WorldGen.SolidTile(tile6))
 									{
 										num62++;
-										if (tile6.type == 19 && tile6.slope() == 0)
+										if (TileLoader.IsPlatform(tile6.type) && tile6.slope() == 0)
 										{
 											num62++;
 										}
@@ -26093,12 +26319,12 @@
 										num60 = 2;
 									}
 									tile6 = Main.tile[num58 - 1, num59];
-									if (tile6.active() && tile6.type == 19)
+									if (tile6.active() && TileLoader.IsPlatform(tile6.type))
 									{
 										num60 = 0;
 									}
 									tile6 = Main.tile[num58 + 1, num59];
-									if (tile6.active() && tile6.type == 19)
+									if (tile6.active() && TileLoader.IsPlatform(tile6.type))
 									{
 										num60 = 0;
 									}
@@ -26123,7 +26349,7 @@
 											num67 = -1;
 										}
 										tile6 = Main.tile[num58 + num66, num59 + num67];
-										if (tile6.active() && tile6.type == 19 && tile6.slope() == 0 && (!Main.tile[num58 + num66 + num66, num59 + num67].active() || Main.tile[num58 + num66 + num66, num59 + num67].type != 19 || !Main.tile[num58 + num66 + num66, num59 + num67].halfBrick()))
+										if (tile6.active() && TileLoader.IsPlatform(tile6.type) && tile6.slope() == 0 && (!Main.tile[num58 + num66 + num66, num59 + num67].active() || !TileLoader.IsPlatform(Main.tile[num58 + num66 + num66, num59 + num67].type) || !Main.tile[num58 + num66 + num66, num59 + num67].halfBrick()))
 										{
 											WorldGen.SlopeTile(num58 + num66, num59 + num67, num60);
 											num65 = (int)tile6.slope();
@@ -26143,7 +26369,7 @@
 											num67 = 1;
 										}
 										tile6 = Main.tile[num58 + num66, num59 + num67];
-										if (tile6.active() && tile6.type == 19 && tile6.slope() == 0 && WorldGen.PlatformProperSides(num58 + num66, num59 + num67, true) <= 0)
+										if (tile6.active() && TileLoader.IsPlatform(tile6.type) && tile6.slope() == 0 && WorldGen.PlatformProperSides(num58 + num66, num59 + num67, true) <= 0)
 										{
 											WorldGen.SlopeTile(num58 + num66, num59 + num67, num60);
 											num65 = (int)tile6.slope();
@@ -26157,16 +26383,16 @@
 									{
 										int num66 = -1;
 										tile6 = Main.tile[num58 + num66, num59];
-										if (tile6.active() && tile6.type == 19 && tile6.slope() != 0)
+										if (tile6.active() && TileLoader.IsPlatform(tile6.type) && tile6.slope() != 0)
 										{
 											int num68 = (tile6.slope() == 1).ToDirectionInt() * num66;
 											num60 = (int)((num68 == -1) ? 0 : tile6.slope());
 											bool flag8 = true;
-											if (Main.tile[num58 + num66 * 2, num59 + num68].active() && Main.tile[num58 + num66 * 2, num59].type == 19 && num60 == (int)Main.tile[num58 + num66 * 2, num59 + num68].slope())
+											if (Main.tile[num58 + num66 * 2, num59 + num68].active() && TileLoader.IsPlatform(Main.tile[num58 + num66 * 2, num59].type) && num60 == (int)Main.tile[num58 + num66 * 2, num59 + num68].slope())
 											{
 												flag8 = false;
 											}
-											if (Main.tile[num58, num59 - num68].active() && Main.tile[num58, num59 - num68].type == 19 && tile6.slope() == Main.tile[num58, num59 - num68].slope())
+											if (Main.tile[num58, num59 - num68].active() && TileLoader.IsPlatform(Main.tile[num58, num59 - num68].type) && tile6.slope() == Main.tile[num58, num59 - num68].slope())
 											{
 												flag8 = false;
 											}
@@ -26183,16 +26409,16 @@
 										num66 = 1;
 										int num67 = 0;
 										tile6 = Main.tile[num58 + num66, num59 + num67];
-										if (tile6.active() && tile6.type == 19 && tile6.slope() != 0)
+										if (tile6.active() && TileLoader.IsPlatform(tile6.type) && tile6.slope() != 0)
 										{
 											int num70 = (tile6.slope() == 1).ToDirectionInt() * num66;
 											num60 = (int)((num70 == -1) ? 0 : tile6.slope());
 											bool flag9 = true;
-											if (Main.tile[num58 + num66 * 2, num59 + num70].active() && Main.tile[num58 + num66 * 2, num59].type == 19 && num60 == (int)Main.tile[num58 + num66 * 2, num59 + num70].slope())
+											if (Main.tile[num58 + num66 * 2, num59 + num70].active() && TileLoader.IsPlatform(Main.tile[num58 + num66 * 2, num59].type) && num60 == (int)Main.tile[num58 + num66 * 2, num59 + num70].slope())
 											{
 												flag9 = false;
 											}
-											if (Main.tile[num58, num59 - num70].active() && Main.tile[num58, num59 - num70].type == 19 && tile6.slope() == Main.tile[num58, num59 - num70].slope())
+											if (Main.tile[num58, num59 - num70].active() && TileLoader.IsPlatform(Main.tile[num58, num59 - num70].type) && tile6.slope() == Main.tile[num58, num59 - num70].slope())
 											{
 												flag9 = false;
 											}
@@ -26223,11 +26449,11 @@
 									}
 								}
 							}
-							if (Main.tileSolid[this.inventory[this.selectedItem].createTile] && this.inventory[this.selectedItem].createTile != 19)
+							if (Main.tileSolid[this.inventory[this.selectedItem].createTile] && !TileLoader.IsPlatform(this.inventory[this.selectedItem].createTile))
 							{
 								int num71 = Player.tileTargetX;
 								int num72 = Player.tileTargetY + 1;
-								if (Main.tile[num71, num72] != null && Main.tile[num71, num72].type != 19 && (Main.tile[num71, num72].topSlope() || Main.tile[num71, num72].halfBrick()))
+								if (Main.tile[num71, num72] != null && !TileLoader.IsPlatform(Main.tile[num71, num72].type) && (Main.tile[num71, num72].topSlope() || Main.tile[num71, num72].halfBrick()))
 								{
 									WorldGen.SlopeTile(num71, num72, 0);
 									if (Main.netMode == 1)
@@ -26237,7 +26463,7 @@
 								}
 								num71 = Player.tileTargetX;
 								num72 = Player.tileTargetY - 1;
-								if (Main.tile[num71, num72] != null && Main.tile[num71, num72].type != 19 && Main.tile[num71, num72].bottomSlope())
+								if (Main.tile[num71, num72] != null && !TileLoader.IsPlatform(Main.tile[num71, num72].type) && Main.tile[num71, num72].bottomSlope())
 								{
 									WorldGen.SlopeTile(num71, num72, 0);
 									if (Main.netMode == 1)
@@ -26476,7 +26702,7 @@
 			int num2 = 25;
 			int num3 = 50;
 			int num4 = -1;
-			if (extractType == 1)
+			if (extractType == ItemID.DesertFossil)
 			{
 				num /= 3;
 				num2 *= 2;
@@ -26484,7 +26710,7 @@
 				num4 = 10;
 			}
 			int num5 = 1;
-			int num6;
+			int num6 = 0;
 			if (num4 != -1 && Main.rand.Next(num4) == 0)
 			{
 				num6 = 3380;
@@ -26807,6 +27033,7 @@
 					num5 += Main.rand.Next(0, 6);
 				}
 			}
+			ItemLoader.ExtractinatorUse(ref num6, ref num5, extractType);
 			if (num6 > 0)
 			{
 				Vector2 vector = Main.ReverseGravitySupport(Main.MouseScreen, 0f) + Main.screenPosition;
@@ -26934,6 +27161,7 @@
 		{
 			int num = 0;
 			int fishingPole = this.inventory[this.selectedItem].fishingPole;
+			int bestFishingPoleIndex = this.selectedItem;
 			if (fishingPole == 0)
 			{
 				for (int i = 0; i < 58; i++)
@@ -26941,6 +27169,7 @@
 					if (this.inventory[i].fishingPole > fishingPole)
 					{
 						fishingPole = this.inventory[i].fishingPole;
+						bestFishingPoleIndex = i;
 					}
 				}
 			}
@@ -27002,6 +27231,7 @@
 			{
 				num2 = (int)((float)num2 * 0.9f);
 			}
+			PlayerHooks.GetFishingLevel(this, this.inventory[bestFishingPoleIndex], this.inventory[j], ref num2);
 			return num2;
 		}
 
@@ -27118,6 +27348,10 @@
 
 		public void ItemCheck(int i)
 		{
+			if (!PlayerHooks.PreItemCheck(this))
+			{
+				return;
+			}
 			if (this.webbed || this.frozen || this.stoned)
 			{
 				return;
@@ -27320,7 +27554,7 @@
 				{
 					this.altFunctionUse = 2;
 				}
-				bool flag2 = true;
+				bool flag2 = ItemLoader.CanUseItem(item, this);
 				if (item.shoot == 0)
 				{
 					this.itemRotation = 0f;
@@ -27898,7 +28132,7 @@
 						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, item.useSound);
 					}
 				}
-				if (flag2 && this.whoAmI == Main.myPlayer && item.shoot >= 0 && item.shoot < 651 && (ProjectileID.Sets.LightPet[item.shoot] || Main.projPet[item.shoot]))
+				if (flag2 && this.whoAmI == Main.myPlayer && item.shoot >= 0 && (ProjectileID.Sets.LightPet[item.shoot] || Main.projPet[item.shoot]))
 				{
 					if (ProjectileID.Sets.MinionSacrificable[item.shoot])
 					{
@@ -28282,6 +28516,7 @@
 							this.itemLocation.Y = this.MountedCenter.Y - (float)Main.itemTexture[item.type].Height * 0.5f;
 						}
 					}
+					ItemLoader.UseStyle(item, this);
 				}
 			}
 			else if (item.holdStyle == 1 && !this.pulley)
@@ -28478,6 +28713,7 @@
 				this.itemLocation.Y = this.MountedCenter.Y - (float)Main.itemTexture[item.type].Height * 0.5f;
 				this.itemRotation = 0f;
 			}
+			ItemLoader.HoldStyle(item, this);
 			if ((((item.type == 974 || item.type == 8 || item.type == 1245 || item.type == 2274 || item.type == 3004 || item.type == 3045 || item.type == 3114 || (item.type >= 427 && item.type <= 433)) && !this.wet) || item.type == 523 || item.type == 1333) && !this.pulley)
 			{
 				float num50 = 1f;
@@ -28923,6 +29159,7 @@
 					Lighting.AddLight(position16, 1f, 0.6f, 0.85f);
 				}
 			}
+			ItemLoader.HoldItem(item, this);
 			if (this.controlUseItem)
 			{
 				this.releaseUseItem = false;
@@ -28958,6 +29195,7 @@
 				{
 					flag8 = false;
 				}
+				ItemLoader.CheckProjOnSwing(this, item, ref flag8);
 				if (item.shoot > 0 && this.itemAnimation > 0 && this.itemTime == 0 && flag8)
 				{
 					int num71 = item.shoot;
@@ -30112,7 +30350,8 @@
 							}
 							Projectile.NewProjectile(vector2.X, vector2.Y - this.gravDir * 4f, num202, num203, num71, num73, num74, i, 0f, (float)Main.rand.Next(12) / 6f);
 						}
-						else
+						else if (PlayerHooks.Shoot(this, item, ref vector2, ref num78, ref num79, ref num71, ref num73, ref num74)
+						         && ItemLoader.Shoot(item, this, ref vector2, ref num78, ref num79, ref num71, ref num73, ref num74))
 						{
 							int num204 = Projectile.NewProjectile(vector2.X, vector2.Y, num78, num79, num71, num73, num74, i, 0f, 0f);
 							if (item.type == 726)
@@ -30481,7 +30720,7 @@
 								flag14 = false;
 								if (item.hammer > 0)
 								{
-									num222 += item.hammer;
+									TileLoader.MineDamage(item.hammer, ref num222);
 									if (!WorldGen.CanKillTile(Player.tileTargetX, Player.tileTargetY))
 									{
 										num222 = 0;
@@ -30525,7 +30764,7 @@
 								}
 								else
 								{
-									num222 += item.axe;
+									TileLoader.MineDamage(item.axe, ref num222);
 								}
 								if (item.axe > 0)
 								{
@@ -30589,7 +30828,10 @@
 									{
 										int num223 = Player.tileTargetX;
 										int num224 = Player.tileTargetY;
-										if (Main.tile[num223, num224].type == 19)
+										if (TileLoader.Slope(num223, num224, Main.tile[num223, num224].type))
+										{
+										}
+										else if (TileLoader.IsPlatform(Main.tile[num223, num224].type))
 										{
 											if (Main.tile[num223, num224].halfBrick())
 											{
@@ -30603,7 +30845,7 @@
 											{
 												int num225 = 1;
 												int slope = 2;
-												if (Main.tile[num223 + 1, num224 - 1].type == 19 || Main.tile[num223 - 1, num224 + 1].type == 19 || (WorldGen.SolidTile(num223 + 1, num224) && !WorldGen.SolidTile(num223 - 1, num224)))
+												if (TileLoader.IsPlatform(Main.tile[num223 + 1, num224 - 1].type) || TileLoader.IsPlatform(Main.tile[num223 - 1, num224 + 1].type) || (WorldGen.SolidTile(num223 + 1, num224) && !WorldGen.SolidTile(num223 - 1, num224)))
 												{
 													num225 = 2;
 													slope = 1;
@@ -31059,6 +31301,7 @@
 						r2.Height = (int)((double)r2.Height * 0.6);
 					}
 				}
+				ItemLoader.UseItemHitbox(item, this, ref r2, ref flag17);
 				float arg_BA93_0 = this.gravDir;
 				if (item.type == 1450 && Main.rand.Next(3) == 0)
 				{
@@ -31418,6 +31661,8 @@
 						Dust expr_D7D2_cp_0 = Main.dust[num280];
 						expr_D7D2_cp_0.velocity.Y = expr_D7D2_cp_0.velocity.Y * 2f;
 					}
+					ItemLoader.MeleeEffects(item, this, r2);
+					PlayerHooks.MeleeEffects(this, item, r2);
 					if (Main.myPlayer == i && (item.type == 1991 || item.type == 3183))
 					{
 						for (int num281 = 0; num281 < 200; num281++)
@@ -31533,7 +31778,23 @@
 								{
 									if (!Main.npc[num292].dontTakeDamage)
 									{
-										if (!Main.npc[num292].friendly || (Main.npc[num292].type == 22 && this.killGuide) || (Main.npc[num292].type == 54 && this.killClothier))
+										bool? modCanHit = ItemLoader.CanHitNPC(item, this, Main.npc[num292]);
+										if (modCanHit.HasValue && !modCanHit.Value)
+										{
+											continue;
+										}
+										bool? modCanBeHit = NPCLoader.CanBeHitByItem(Main.npc[num292], this, item);
+										if (modCanBeHit.HasValue && !modCanBeHit.Value)
+										{
+											continue;
+										}
+										bool? modCanHit2 = PlayerHooks.CanHitNPC(this, item, Main.npc[num292]);
+										if (modCanHit2.HasValue && !modCanHit2.Value)
+										{
+											continue;
+										}
+										bool canHitFlag = (modCanHit.HasValue && modCanHit.Value) || (modCanBeHit.HasValue && modCanBeHit.Value) || (modCanHit2.HasValue && modCanHit2.Value);
+										if (!Main.npc[num292].friendly || (Main.npc[num292].type == 22 && this.killGuide) || (Main.npc[num292].type == 54 && this.killClothier) || canHitFlag)
 										{
 											Rectangle value12 = new Rectangle((int)Main.npc[num292].position.X, (int)Main.npc[num292].position.Y, Main.npc[num292].width, Main.npc[num292].height);
 											if (r2.Intersects(value12) && (Main.npc[num292].noTileCollide || Collision.CanHit(this.position, this.width, this.height, Main.npc[num292].position, Main.npc[num292].width, Main.npc[num292].height)))
@@ -31556,6 +31817,9 @@
 													}
 												}
 												int num294 = Main.DamageVar((float)num282);
+												ItemLoader.ModifyHitNPC(item, this, Main.npc[num292], ref num294, ref num283, ref flag18);
+												NPCLoader.ModifyHitByItem(Main.npc[num292], this, item, ref num294, ref num283, ref flag18);
+												PlayerHooks.ModifyHitNPC(this, item, Main.npc[num292], ref num294, ref num283, ref flag18);
 												this.StatusNPC(item.type, num292);
 												this.OnHit(Main.npc[num292].Center.X, Main.npc[num292].Center.Y, Main.npc[num292]);
 												if (this.armorPenetration > 0)
@@ -31630,6 +31894,9 @@
 														NetMessage.SendData(21, -1, -1, "", num300, 0f, 0f, 0f, 0, 0, 0);
 													}
 												}
+												PlayerHooks.OnHitNPC(this, item, Main.npc[num292], num295, num283, flag18);
+												ItemLoader.OnHitNPC(item, this, Main.npc[num292], num295, num283, flag18);
+												NPCLoader.OnHitByItem(Main.npc[num292], this, item, num295, num283, flag18);
 												int num301 = Item.NPCtoBanner(Main.npc[num292].BannerID());
 												if (num301 >= 0)
 												{
@@ -31674,7 +31941,8 @@
 									if (num302 != i && Main.player[num302].active && Main.player[num302].hostile && !Main.player[num302].immune && !Main.player[num302].dead && (Main.player[i].team == 0 || Main.player[i].team != Main.player[num302].team))
 									{
 										Rectangle value16 = new Rectangle((int)Main.player[num302].position.X, (int)Main.player[num302].position.Y, Main.player[num302].width, Main.player[num302].height);
-										if (r2.Intersects(value16) && Collision.CanHit(this.position, this.width, this.height, Main.player[num302].position, Main.player[num302].width, Main.player[num302].height))
+										if (ItemLoader.CanHitPvp(item, this, Main.player[num302]) && PlayerHooks.CanHitPvp(this, item, Main.player[num302])
+										    && r2.Intersects(value16) && Collision.CanHit(this.position, this.width, this.height, Main.player[num302].position, Main.player[num302].width, Main.player[num302].height))
 										{
 											bool flag20 = false;
 											if (Main.rand.Next(1, 101) <= 10)
@@ -31682,6 +31950,8 @@
 												flag20 = true;
 											}
 											int num303 = Main.DamageVar((float)num282);
+											ItemLoader.ModifyHitPvp(item, this, Main.player[num302], ref num303, ref flag20);
+											PlayerHooks.ModifyHitPvp(this, item, Main.player[num302], ref num303, ref flag20);
 											this.StatusPvP(item.type, num302);
 											this.OnHit(Main.player[num302].Center.X, Main.player[num302].Center.Y, Main.player[num302]);
 											int num304 = (int)Main.player[num302].Hurt(num303, this.direction, true, false, "", flag20, -1);
@@ -31731,6 +32001,8 @@
 											{
 												this.pumpkinSword(num302, (int)((double)num282 * 1.5), num283);
 											}
+											ItemLoader.OnHitPvp(item, this, Main.player[num302], num304, flag20);
+											PlayerHooks.OnHitPvp(this, item, Main.player[num302], num304, flag20);
 											if (Main.netMode != 0)
 											{
 												if (flag20)
@@ -31812,6 +32084,10 @@
 			}
 			if (this.itemTime == 0 && this.itemAnimation > 0)
 			{
+				if (ItemLoader.UseItem(item, this))
+				{
+					this.itemTime = item.useTime;
+				}
 				if (item.hairDye >= 0)
 				{
 					this.itemTime = item.useTime;
@@ -32325,6 +32601,7 @@
 					{
 						flag22 = true;
 					}
+					ItemLoader.ConsumeItem(item, this, ref flag22);
 					if (flag22)
 					{
 						if (item.stack > 0)
@@ -32351,6 +32628,7 @@
 					Main.mouseItem = item.Clone();
 				}
 			}
+			PlayerHooks.PostItemCheck(this);
 		}
 
 		public float GetWeaponKnockback(Item sItem, float KnockBack)
@@ -32375,6 +32653,8 @@
 			{
 				KnockBack *= 1f + (1f - this.stealth) * 0.5f;
 			}
+			ItemLoader.GetWeaponKnockback(sItem, this, ref KnockBack);
+			PlayerHooks.GetWeaponKnockback(this, sItem, ref KnockBack);
 			return KnockBack;
 		}
 
@@ -32416,6 +32696,8 @@
 					num = (int)((float)num * this.minionDamage);
 				}
 			}
+			ItemLoader.GetWeaponDamage(sItem, this, ref num);
+			PlayerHooks.GetWeaponDamage(this, sItem, ref num);
 			return num;
 		}
 
@@ -32649,6 +32931,14 @@
 				{
 					flag2 = true;
 				}
+				if (!PlayerHooks.ConsumeAmmo(this, sItem, item))
+				{
+					flag2 = true;
+				}
+				if (!ItemLoader.ConsumeAmmo(sItem, item, this))
+				{
+					flag2 = true;
+				}
 				if (!flag2 && item.consumable)
 				{
 					item.stack--;
@@ -32701,7 +32991,7 @@
 			}
 			else
 			{
-				num += pickPower;
+				TileLoader.MineDamage(pickPower, ref num);
 			}
 			if (tile.type == 211 && pickPower < 200)
 			{
@@ -32769,6 +33059,10 @@
 			else if (tile.type == 223 && pickPower < 150)
 			{
 				num = 0;
+			}
+			else
+			{
+				TileLoader.PickPowerCheck(tile, pickPower, ref num);
 			}
 			if (tile.type == 147 || tile.type == 0 || tile.type == 40 || tile.type == 53 || tile.type == 57 || tile.type == 59 || tile.type == 123 || tile.type == 224 || tile.type == 397)
 			{
@@ -33197,14 +33491,31 @@
 
 		public void DropItems()
 		{
+			IList<Item> startInventory = PlayerHooks.SetupStartInventory(this);
+			IDictionary<int, int> startCounts = new Dictionary<int, int>();
+			foreach (Item item in startInventory)
+			{
+				if (!startCounts.ContainsKey(item.netID))
+				{
+					startCounts[item.netID] = 0;
+				}
+				startCounts[item.netID] += item.stack;
+			}
 			for (int i = 0; i < 59; i++)
 			{
-				if (this.inventory[i].stack > 0 && this.inventory[i].name != "Copper Pickaxe" && this.inventory[i].name != "Copper Axe" && this.inventory[i].name != "Copper Shortsword")
-				{
+				Item item = this.inventory[i];
+				if (item.stack > 0 && (!startCounts.ContainsKey(item.netID) || startCounts[item.netID] < item.stack) && item.type != ModLoader.ModLoader.GetMod("ModLoader").ItemType("StartBag"))
+				{
+					int stack = item.stack;
+					if (startCounts.ContainsKey(item.netID))
+					{
+						stack -= startCounts[item.netID];
+						startCounts[item.netID] = 0;
+					}
 					int num = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, this.inventory[i].type, 1, false, 0, false, false);
 					Main.item[num].netDefaults(this.inventory[i].netID);
 					Main.item[num].Prefix((int)this.inventory[i].prefix);
-					Main.item[num].stack = this.inventory[i].stack;
+					Main.item[num].stack = stack;
 					Main.item[num].velocity.Y = (float)Main.rand.Next(-20, 1) * 0.2f;
 					Main.item[num].velocity.X = (float)Main.rand.Next(-20, 21) * 0.2f;
 					Main.item[num].noGrabDelay = 100;
@@ -33213,6 +33524,10 @@
 					{
 						NetMessage.SendData(21, -1, -1, "", num, 0f, 0f, 0f, 0, 0, 0);
 					}
+				}
+				else if (item.stack > 0 && startCounts.ContainsKey(item.netID))
+				{
+					startCounts[item.netID] -= item.stack;
 				}
 				this.inventory[i] = new Item();
 				if (i < this.armor.Length)
@@ -33292,12 +33607,7 @@
 					this.miscDyes[i] = new Item();
 				}
 			}
-			this.inventory[0].SetDefaults("Copper Shortsword");
-			this.inventory[0].Prefix(-1);
-			this.inventory[1].SetDefaults("Copper Pickaxe");
-			this.inventory[1].Prefix(-1);
-			this.inventory[2].SetDefaults("Copper Axe");
-			this.inventory[2].Prefix(-1);
+			PlayerHooks.SetStartInventory(this, startInventory);
 			Main.mouseItem = new Item();
 		}
 
@@ -33377,7 +33687,7 @@
 			{
 				return false;
 			}
-			if (!Main.tile[x, y - 1].active() || Main.tile[x, y - 1].type != 79)
+			if (!Main.tile[x, y - 1].active() || (Main.tile[x, y - 1].type != 79 && !TileLoader.IsModBed(Main.tile[x, y - 1].type)))
 			{
 				return false;
 			}
@@ -33586,12 +33896,12 @@
 							{
 								player.armor[k].name = "";
 							}
-							binaryWriter.Write(player.armor[k].netID);
+							ItemIO.WriteVanillaID(player.armor[k], binaryWriter);
 							binaryWriter.Write(player.armor[k].prefix);
 						}
 						for (int l = 0; l < player.dye.Length; l++)
 						{
-							binaryWriter.Write(player.dye[l].netID);
+							ItemIO.WriteVanillaID(player.dye[l], binaryWriter);
 							binaryWriter.Write(player.dye[l].prefix);
 						}
 						for (int m = 0; m < 58; m++)
@@ -33600,16 +33910,16 @@
 							{
 								player.inventory[m].name = "";
 							}
-							binaryWriter.Write(player.inventory[m].netID);
+							ItemIO.WriteVanillaID(player.inventory[m], binaryWriter);
 							binaryWriter.Write(player.inventory[m].stack);
 							binaryWriter.Write(player.inventory[m].prefix);
 							binaryWriter.Write(player.inventory[m].favorited);
 						}
 						for (int n = 0; n < player.miscEquips.Length; n++)
 						{
-							binaryWriter.Write(player.miscEquips[n].netID);
+							ItemIO.WriteVanillaID(player.miscEquips[n], binaryWriter);
 							binaryWriter.Write(player.miscEquips[n].prefix);
-							binaryWriter.Write(player.miscDyes[n].netID);
+							ItemIO.WriteVanillaID(player.miscDyes[n], binaryWriter);
 							binaryWriter.Write(player.miscDyes[n].prefix);
 						}
 						for (int num = 0; num < 40; num++)
@@ -33618,7 +33928,7 @@
 							{
 								player.bank.item[num].name = "";
 							}
-							binaryWriter.Write(player.bank.item[num].netID);
+							ItemIO.WriteVanillaID(player.bank.item[num], binaryWriter);
 							binaryWriter.Write(player.bank.item[num].stack);
 							binaryWriter.Write(player.bank.item[num].prefix);
 						}
@@ -33628,13 +33938,13 @@
 							{
 								player.bank2.item[num2].name = "";
 							}
-							binaryWriter.Write(player.bank2.item[num2].netID);
+							ItemIO.WriteVanillaID(player.bank2.item[num2], binaryWriter);
 							binaryWriter.Write(player.bank2.item[num2].stack);
 							binaryWriter.Write(player.bank2.item[num2].prefix);
 						}
 						for (int num3 = 0; num3 < 22; num3++)
 						{
-							if (Main.buffNoSave[player.buffType[num3]])
+							if (Main.buffNoSave[player.buffType[num3]] || BuffLoader.IsModBuff(player.buffType[num3]))
 							{
 								binaryWriter.Write(0);
 								binaryWriter.Write(0);
@@ -33673,6 +33983,7 @@
 					}
 				}
 			}
+			PlayerIO.WriteModFile(player, path, isCloudSave);
 		}
 
 		public static PlayerFileData LoadPlayer(string playerPath, bool cloudSave)
@@ -34116,6 +34427,7 @@
 								player.anglerQuestsFinished = binaryReader.ReadInt32();
 							}
 							player.skinVariant = (int)MathHelper.Clamp((float)player.skinVariant, 0f, 7f);
+							PlayerIO.ReadModFile(player, playerPath, cloudSave);
 							for (int num32 = 3; num32 < 8 + player.extraAccessorySlots; num32++)
 							{
 								int type = player.armor[num32].type;
@@ -34184,6 +34496,7 @@
 					if (FileUtilities.Exists(file + ".bak", cloudSave))
 					{
 						FileUtilities.Move(file + ".bak", file, cloudSave, true);
+						PlayerIO.LoadBackup(file, cloudSave);
 					}
 					playerFileData = Player.LoadPlayer(file, cloudSave);
 					if (playerFileData.Player == null)
@@ -34249,9 +34562,22 @@
 			}
 			return -1;
 		}
+        
+		internal readonly IList<ModPlayer> modPlayers = new List<ModPlayer>();
 
-		public Player()
+		public ModPlayer GetModPlayer(Mod mod, string name)
 		{
+			return PlayerHooks.GetModPlayer(this, mod, name);
+		}
+
+        public T GetModPlayer<T>(Mod mod) where T : ModPlayer
+        {
+            return (T)GetModPlayer(mod, typeof(T).Name);
+        }
+
+        public Player()
+		{
+			PlayerHooks.SetupPlayer(this);
 			int[] array = new int[2];
 			this.hurtCooldowns = array;
 			this.width = 20;
@@ -34288,16 +34614,14 @@
 			}
 			this.trashItem = new Item();
 			this.grappling[0] = -1;
-			this.inventory[0].SetDefaults("Copper Shortsword");
-			this.inventory[1].SetDefaults("Copper Pickaxe");
-			this.inventory[2].SetDefaults("Copper Axe");
+			PlayerHooks.SetStartInventory(this);
 			this.statManaMax = 20;
 			this.extraAccessory = false;
 			if (Main.cEd)
 			{
 				this.inventory[3].SetDefaults(603, false);
 			}
-			for (int n = 0; n < 419; n++)
+			for (int n = 0; n < this.adjTile.Length; n++)
 			{
 				this.adjTile[n] = false;
 				this.oldAdjTile[n] = false;
@@ -34400,6 +34724,7 @@
 
 		public void GetAnglerReward()
 		{
+			List<Item> rewardItems = new List<Item>();
 			Item item = new Item();
 			item.type = 0;
 			float num = 1f;
@@ -34415,6 +34740,10 @@
 			{
 				num = 0.25f - (float)(this.anglerQuestsFinished - 100) * 0.002f;
 			}
+			else
+			{
+				num = 0.15f;
+			}
 			if (this.anglerQuestsFinished == 5)
 			{
 				item.SetDefaults(2428, false);
@@ -34571,69 +34900,24 @@
 					}
 				}
 			}
-			item.position = base.Center;
-			Item item2 = this.GetItem(this.whoAmI, item, true, false);
-			if (item2.stack > 0)
-			{
-				int number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, item2.type, item2.stack, false, 0, true, false);
-				if (Main.netMode == 1)
-				{
-					NetMessage.SendData(21, -1, -1, "", number, 1f, 0f, 0f, 0, 0, 0);
-				}
-			}
+			rewardItems.Add(item);
 			if (item.type == 2417)
 			{
 				Item item3 = new Item();
 				Item item4 = new Item();
 				item3.SetDefaults(2418, false);
-				item3.position = base.Center;
-				item2 = this.GetItem(this.whoAmI, item3, true, false);
-				if (item2.stack > 0)
-				{
-					int number2 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, item2.type, item2.stack, false, 0, true, false);
-					if (Main.netMode == 1)
-					{
-						NetMessage.SendData(21, -1, -1, "", number2, 1f, 0f, 0f, 0, 0, 0);
-					}
-				}
+				rewardItems.Add(item3);
 				item4.SetDefaults(2419, false);
-				item4.position = base.Center;
-				item2 = this.GetItem(this.whoAmI, item4, true, false);
-				if (item2.stack > 0)
-				{
-					int number3 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, item2.type, item2.stack, false, 0, true, false);
-					if (Main.netMode == 1)
-					{
-						NetMessage.SendData(21, -1, -1, "", number3, 1f, 0f, 0f, 0, 0, 0);
-					}
-				}
+				rewardItems.Add(item4);
 			}
 			else if (item.type == 2498)
 			{
 				Item item5 = new Item();
 				Item item6 = new Item();
 				item5.SetDefaults(2499, false);
-				item5.position = base.Center;
-				item2 = this.GetItem(this.whoAmI, item5, true, false);
-				if (item2.stack > 0)
-				{
-					int number4 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, item2.type, item2.stack, false, 0, true, false);
-					if (Main.netMode == 1)
-					{
-						NetMessage.SendData(21, -1, -1, "", number4, 1f, 0f, 0f, 0, 0, 0);
-					}
-				}
+				rewardItems.Add(item5);
 				item6.SetDefaults(2500, false);
-				item6.position = base.Center;
-				item2 = this.GetItem(this.whoAmI, item6, true, false);
-				if (item2.stack > 0)
-				{
-					int number5 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, item2.type, item2.stack, false, 0, true, false);
-					if (Main.netMode == 1)
-					{
-						NetMessage.SendData(21, -1, -1, "", number5, 1f, 0f, 0f, 0, 0, 0);
-					}
-				}
+				rewardItems.Add(item6);
 			}
 			Item item7 = new Item();
 			int num4 = (this.anglerQuestsFinished + 50) / 2;
@@ -34670,16 +34954,7 @@
 				item7.SetDefaults(72, false);
 				item7.stack = num4;
 			}
-			item7.position = base.Center;
-			item2 = this.GetItem(this.whoAmI, item7, true, false);
-			if (item2.stack > 0)
-			{
-				int number6 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, item2.type, item2.stack, false, 0, true, false);
-				if (Main.netMode == 1)
-				{
-					NetMessage.SendData(21, -1, -1, "", number6, 1f, 0f, 0f, 0, 0, 0);
-				}
-			}
+			rewardItems.Add(item7);
 			if (Main.rand.Next((int)(100f * num)) <= 50)
 			{
 				Item item8 = new Item();
@@ -34719,14 +34994,19 @@
 				{
 					item8.stack++;
 				}
-				item8.position = base.Center;
-				item2 = this.GetItem(this.whoAmI, item8, true, false);
-				if (item2.stack > 0)
-				{
-					int number7 = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, item2.type, item2.stack, false, 0, true, false);
+				rewardItems.Add(item8);
+			}
+			PlayerHooks.AnglerQuestReward(this, num, rewardItems);
+			foreach (Item rewardItem in rewardItems)
+			{
+				rewardItem.position = base.Center;
+				Item getItem = this.GetItem(this.whoAmI, rewardItem, true, false);
+				if (getItem.stack > 0)
+				{ 
+					int number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, getItem.type, getItem.stack, false, 0, true, false);
 					if (Main.netMode == 1)
 					{
-						NetMessage.SendData(21, -1, -1, "", number7, 1f, 0f, 0f, 0, 0, 0);
+						NetMessage.SendData(21, -1, -1, "", number, 1f, 0f, 0f, 0, 0, 0);
 					}
 				}
 			}
@@ -34785,6 +35065,7 @@
 					list.Add(3024);
 				}
 			}
+			PlayerHooks.GetDyeTraderReward(this, list);
 			int type = list[Main.rand.Next(list.Count)];
 			Item item = new Item();
 			item.SetDefaults(type, false);

