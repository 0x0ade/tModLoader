--- src/Terraria\Terraria\Player.cs
+++ src/tModLoader\Terraria\Player.cs
@@ -14,6 +14,8 @@
 using Terraria.Graphics.Shaders;
 using Terraria.ID;
 using Terraria.IO;
+using Terraria.ModLoader;
+using Terraria.ModLoader.IO;
 using Terraria.ObjectData;
 using Terraria.Social;
 using Terraria.UI;
@@ -63,7 +65,7 @@
 		public const int defaultWidth = 20;
 		public const int defaultHeight = 42;
 		private const int shadowMax = 3;
-		private static byte[] ENCRYPTION_KEY = new UnicodeEncoding().GetBytes("h3y_gUyZ");
+		internal static byte[] ENCRYPTION_KEY = new UnicodeEncoding().GetBytes("h3y_gUyZ");
 		public Player.OverheadMessage chatOverhead = default(Player.OverheadMessage);
 		public bool alchemyTable;
 		private bool GoingDownWithGrapple;
@@ -78,7 +80,7 @@
 		public static int taxRate = 3600;
 		public static int crystalLeafDamage = 100;
 		public static int crystalLeafKB = 10;
-		public bool[] NPCBannerBuff = new bool[251];
+		public bool[] NPCBannerBuff = new bool[NPCLoader.NPCCount()];
 		public bool hasBanner;
 		public Vector2 lastDeathPostion;
 		public DateTime lastDeathTime;
@@ -293,7 +295,7 @@
 		public float ghostDir = 1f;
 		public int[] buffType = new int[22];
 		public int[] buffTime = new int[22];
-		public bool[] buffImmune = new bool[191];
+		public bool[] buffImmune = new bool[BuffLoader.BuffCount()];
 		public int heldProj = -1;
 		public int breathCD;
 		public int breathMax = 200;
@@ -581,8 +583,8 @@
 		public bool oldAdjWater;
 		public bool oldAdjHoney;
 		public bool oldAdjLava;
-		public bool[] adjTile = new bool[419];
-		public bool[] oldAdjTile = new bool[419];
+		public bool[] adjTile = new bool[TileLoader.TileCount()];
+		public bool[] oldAdjTile = new bool[TileLoader.TileCount()];
 		private static int defaultItemGrabRange = 38;
 		private static float itemGrabSpeed = 0.45f;
 		private static float itemGrabSpeedMax = 4f;
@@ -720,8 +722,8 @@
 		public int cPet;
 		public int cLight;
 		public int cYorai;
-		public int[] ownedProjectileCounts = new int[651];
-		public bool[] npcTypeNoAggro = new bool[540];
+		public int[] ownedProjectileCounts = new int[ProjectileLoader.ProjectileCount()];
+		public bool[] npcTypeNoAggro = new bool[NPCLoader.NPCCount()];
 		public int lastPortalColorIndex;
 		public int _portalPhysicsTime;
 		public bool portalPhysicsFlag;
@@ -2423,6 +2425,11 @@
 
 		public void openPresent()
 		{
+			if (!ItemLoader.PreOpenVanillaBag("present", this, 0))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("present", this, 0);
 			if (Main.rand.Next(15) == 0 && Main.hardMode)
 			{
 				int number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 602, 1, false, 0, false, false);
@@ -2698,6 +2705,11 @@
 
 		public void OpenBossBag(int type)
 		{
+			if (!ItemLoader.PreOpenVanillaBag("bossBag", this, type))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("bossBag", this, type);
 			if (type == 3318)
 			{
 				if (Main.rand.Next(2) == 0)
@@ -3142,6 +3154,7 @@
 			{
 				num14 = 398;
 			}
+			ItemLoader.OpenBossBag(type, this, ref num14);
 			if (num14 > 0)
 			{
 				NPC nPC = new NPC();
@@ -3198,7 +3211,7 @@
 			}
 		}
 
-		private void TryGettingDevArmor()
+		public void TryGettingDevArmor()
 		{
 			if (Main.rand.Next(20) != 0)
 			{
@@ -3287,6 +3300,11 @@
 
 		public void openCrate(int type)
 		{
+			if (!ItemLoader.PreOpenVanillaBag("crate", this, type))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("crate", this, type);
 			int num = type - 2334;
 			if (type >= 3203)
 			{
@@ -4320,6 +4338,11 @@
 
 		public void openLockBox()
 		{
+			if (!ItemLoader.PreOpenVanillaBag("lockBox", this, 0))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("lockBox", this, 0);
 			bool flag = true;
 			while (flag)
 			{
@@ -4454,6 +4477,11 @@
 
 		public void openHerbBag()
 		{
+			if (!ItemLoader.PreOpenVanillaBag("herbBag", this, 0))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("herbBag", this, 0);
 			int num = Main.rand.Next(2, 5);
 			if (Main.rand.Next(3) == 0)
 			{
@@ -4533,6 +4561,11 @@
 
 		public void openGoodieBag()
 		{
+			if (!ItemLoader.PreOpenVanillaBag("goodieBag", this, 0))
+			{
+				return;
+			}
+			ItemLoader.OpenVanillaBag("goodieBag", this, 0);
 			if (Main.rand.Next(150) == 0)
 			{
 				int number = Item.NewItem((int)this.position.X, (int)this.position.Y, this.width, this.height, 1810, 1, false, 0, false, false);
@@ -6584,6 +6617,7 @@
 					{
 						this.meleeEnchant = 8;
 					}
+					BuffLoader.Update(this.buffType[k], this, ref k);
 				}
 			}
 		}
@@ -6818,6 +6852,7 @@
 				{
 					this.accDreamCatcher = true;
 				}
+				ItemLoader.UpdateInventory(this.inventory[j], this);
 			}
 			for (int k = 0; k < 8 + this.extraAccessorySlots; k++)
 			{
@@ -7644,6 +7679,7 @@
 					{
 						this.meleeSpeed += 0.04f;
 					}
+					ItemLoader.UpdateEquip(this.armor[k], this);
 				}
 			}
 			bool flag = false;
@@ -8618,7 +8654,7 @@
 					}
 					if (Main.myPlayer == this.whoAmI)
 					{
-						if (this.armor[l].type == 576 && Main.rand.Next(10800) == 0 && Main.curMusic > 0 && Main.curMusic <= 39)
+						if (this.armor[l].type == 576 && Main.rand.Next(10800) == 0 && Main.curMusic > 0)
 						{
 							int num6 = 0;
 							if (Main.curMusic == 1)
@@ -8721,14 +8757,18 @@
 							{
 								this.armor[l].SetDefaults(3371, false);
 							}
-							else if (Main.curMusic > 13)
+							else if (Main.curMusic > 13 && Main.curMusic < Main.maxMusic)
 							{
 								this.armor[l].SetDefaults(1596 + Main.curMusic - 14, false);
 							}
-							else
+							else if (Main.curMusic < Main.maxMusic)
 							{
 								this.armor[l].SetDefaults(num6 + 562, false);
 							}
+							else if (SoundLoader.musicToItem.ContainsKey(Main.curMusic))
+							{
+								this.armor[l].SetDefaults(SoundLoader.musicToItem[Main.curMusic]);
+							}
 						}
 						if (this.armor[l].type >= 562 && this.armor[l].type <= 574)
 						{
@@ -8782,7 +8822,12 @@
 						{
 							Main.musicBox2 = 37;
 						}
-					}
+						if (SoundLoader.itemToMusic.ContainsKey(this.armor[l].type))
+						{
+							Main.musicBox2 = SoundLoader.itemToMusic[this.armor[l].type];
+						}
+					}
+					ItemLoader.UpdateAccessory(this.armor[l], this);
 				}
 			}
 			for (int m = 3; m < 8 + this.extraAccessorySlots; m++)
@@ -9390,6 +9435,7 @@
 			{
 				this.DelBuff(this.HasBuff(187));
 			}
+			ItemLoader.UpdateArmorSet(this, this.armor[0], this.armor[1], this.armor[2]);
 		}
 
 		public void UpdateSocialShadow()
@@ -10577,11 +10623,11 @@
 				}
 				list11.Clear();
 			}
-			if (item.createTile == 19 && num8 == -1 && num9 == -1)
+			if (TileLoader.IsPlatform(item.createTile) && num8 == -1 && num9 == -1)
 			{
 				List<Tuple<int, int>> list12 = new List<Tuple<int, int>>();
 				bool flag3 = false;
-				if (Main.tile[num, num2].active() && Main.tile[num, num2].type == 19)
+				if (Main.tile[num, num2].active() && TileLoader.IsPlatform(Main.tile[num, num2].type))
 				{
 					flag3 = true;
 				}
@@ -10592,7 +10638,7 @@
 						for (int num61 = num6; num61 <= num7; num61++)
 						{
 							Tile tile4 = Main.tile[num60, num61];
-							if (tile4.active() && tile4.type == 19)
+							if (tile4.active() && TileLoader.IsPlatform(tile4.type))
 							{
 								int num62 = (int)tile4.slope();
 								if (num62 != 2 && !Main.tile[num60 - 1, num61 - 1].active())
@@ -14417,6 +14463,7 @@
 				num3 = 1.5f;
 				num = 0.125f;
 			}
+			ItemLoader.VerticalWingSpeeds(this, ref num2, ref num5, ref num4, ref num3, ref num);
 			this.velocity.Y = this.velocity.Y - num * this.gravDir;
 			if (this.gravDir == 1f)
 			{
@@ -16141,6 +16188,7 @@
 										this.mapStyle = true;
 									}
 								}
+								ModHooks.HotKeyPressed(a);
 							}
 						}
 						if (Main.gamePad)
@@ -17081,7 +17129,7 @@
 					this.AddBuff(147, 2, false);
 				}
 			}
-			for (int num29 = 0; num29 < 191; num29++)
+			for (int num29 = 0; num29 < BuffLoader.BuffCount(); num29++)
 			{
 				this.buffImmune[num29] = false;
 			}
@@ -18139,6 +18187,7 @@
 					{
 						this.accRunSpeed = 7f;
 					}
+					ItemLoader.HorizontalWingSpeeds(this);
 				}
 				if (this.sticky)
 				{
@@ -18379,6 +18428,7 @@
 				}
 				else
 				{
+					ItemLoader.WingUpdate(this, flag24);
 					if (flag24)
 					{
 						if (this.wings == 10 && Main.rand.Next(2) == 0)
@@ -20175,7 +20225,7 @@
 							this.showItemIcon = true;
 							this.showItemIcon2 = 2738;
 						}
-						if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 219 && (this.inventory[this.selectedItem].type == 424 || this.inventory[this.selectedItem].type == 1103))
+						if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 219 && ItemID.Sets.ExtractinatorMode[this.inventory[this.selectedItem].type] > -1)
 						{
 							this.noThrow = 2;
 							this.showItemIcon = true;
@@ -20501,6 +20551,7 @@
 							this.showItemIcon = true;
 							this.showItemIcon2 = (int)(583 + Main.tile[Player.tileTargetX, Player.tileTargetY].frameX / 18);
 						}
+						TileLoader.MouseOver(Player.tileTargetX, Player.tileTargetY);
 						if (this.controlUseTile)
 						{
 							if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 212 && this.launcherWait <= 0)
@@ -20570,7 +20621,8 @@
 									Wiring.HitSwitch(Player.tileTargetX, Player.tileTargetY);
 									NetMessage.SendData(59, -1, -1, "", Player.tileTargetX, (float)Player.tileTargetY, 0f, 0f, 0, 0, 0);
 								}
-								else if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 139)
+								else if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 139
+								         || TileLoader.IsModMusicBox(Main.tile[Player.tileTargetX, Player.tileTargetY]))
 								{
 									Main.PlaySound(28, Player.tileTargetX * 16, Player.tileTargetY * 16, 0);
 									WorldGen.SwitchMB(Player.tileTargetX, Player.tileTargetY);
@@ -20934,11 +20986,11 @@
 										}
 									}
 								}
-								else if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 10)
+								else if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == TileID.ClosedDoor || TileLoader.OpenDoorID(Main.tile[Player.tileTargetX, Player.tileTargetY]) >= 0)
 								{
 									int num207 = Player.tileTargetX;
 									int num208 = Player.tileTargetY;
-									if (Main.tile[num207, num208].frameY >= 594 && Main.tile[num207, num208].frameY <= 646)
+									if (Main.tile[num207, num208].type == TileID.ClosedDoor && Main.tile[num207, num208].frameY >= 594 && Main.tile[num207, num208].frameY <= 646)
 									{
 										int num209 = 1141;
 										for (int num210 = 0; num210 < 58; num210++)
@@ -20964,7 +21016,7 @@
 										NetMessage.SendData(19, -1, -1, "", 0, (float)Player.tileTargetX, (float)Player.tileTargetY, (float)this.direction, 0, 0, 0);
 									}
 								}
-								else if (Main.tile[Player.tileTargetX, Player.tileTargetY].type == 11 && WorldGen.CloseDoor(Player.tileTargetX, Player.tileTargetY, false))
+								else if (TileLoader.CloseDoorID(Main.tile[Player.tileTargetX, Player.tileTargetY]) >= 0 && WorldGen.CloseDoor(Player.tileTargetX, Player.tileTargetY, false))
 								{
 									NetMessage.SendData(19, -1, -1, "", 1, (float)Player.tileTargetX, (float)Player.tileTargetY, (float)this.direction, 0, 0, 0);
 								}
@@ -21238,6 +21290,7 @@
 										Projectile.NewProjectile(vector4.X, vector4.Y, 0f, 0f, 403, 0, 0f, this.whoAmI, 0f, 0f);
 									}
 								}
+								TileLoader.RightClick(Player.tileTargetX, Player.tileTargetY);
 							}
 							this.releaseUseTile = false;
 						}
@@ -21587,7 +21640,7 @@
 						{
 							num250 = 1;
 						}
-						if ((num250 != -1 || !this.immune) && (this.dash != 2 || num249 != this.eocHit || this.eocDash <= 0) && !this.npcTypeNoAggro[Main.npc[num249].type])
+						if (NPCLoader.CanHitPlayer(Main.npc[num249], this, ref num250) && (num250 != -1 || !this.immune) && (this.dash != 2 || num249 != this.eocHit || this.eocDash <= 0) && !this.npcTypeNoAggro[Main.npc[num249].type])
 						{
 							float num251 = 1f;
 							Rectangle value6 = new Rectangle((int)Main.npc[num249].position.X, (int)Main.npc[num249].position.Y, Main.npc[num249].width, Main.npc[num249].height);
@@ -21678,6 +21731,8 @@
 										num255 = (int)((double)num255 * 0.75);
 									}
 								}
+								bool crit = false;
+								NPCLoader.ModifyHitPlayer(Main.npc[num249], this, ref num255, ref crit);
 								if (this.whoAmI == Main.myPlayer && this.thorns > 0f && !this.immune && !Main.npc[num249].dontTakeDamage)
 								{
 									int num257 = (int)((float)num255 * this.thorns);
@@ -21700,7 +21755,8 @@
 								{
 									this.StatusPlayer(Main.npc[num249]);
 								}
-								this.Hurt(num255, num254, false, false, Lang.deathMsg(-1, num249, -1, -1), false, num250);
+								int realDamage = (int)this.Hurt(num255, num254, false, false, Lang.deathMsg(-1, num249, -1, -1), crit, num250);
+								NPCLoader.OnHitPlayer(Main.npc[num249], this, realDamage, crit);
 							}
 						}
 					}
@@ -22357,10 +22413,16 @@
 					{
 						num += 100;
 					}
+					ItemLoader.GrabRange(Main.item[j], this, ref num);
 					if (new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height).Intersects(new Rectangle((int)Main.item[j].position.X, (int)Main.item[j].position.Y, Main.item[j].width, Main.item[j].height)))
 					{
 						if (i == Main.myPlayer && (this.inventory[this.selectedItem].type != 0 || this.itemAnimation <= 0))
 						{
+							if (!ItemLoader.OnPickup(Main.item[j], this))
+							{
+								Main.item[j] = new Item();
+								continue;
+							}
 							if (ItemID.Sets.NebulaPickup[Main.item[j].type])
 							{
 								Main.PlaySound(7, (int)this.position.X, (int)this.position.Y, 1);
@@ -22425,7 +22487,10 @@
 					else if (new Rectangle((int)this.position.X - num, (int)this.position.Y - num, this.width + num * 2, this.height + num * 2).Intersects(new Rectangle((int)Main.item[j].position.X, (int)Main.item[j].position.Y, Main.item[j].width, Main.item[j].height)) && this.ItemSpace(Main.item[j]))
 					{
 						Main.item[j].beingGrabbed = true;
-						if (this.manaMagnet && (Main.item[j].type == 184 || Main.item[j].type == 1735 || Main.item[j].type == 1868))
+						if (ItemLoader.GrabStyle(Main.item[j], this))
+						{
+						}
+						else if (this.manaMagnet && (Main.item[j].type == 184 || Main.item[j].type == 1735 || Main.item[j].type == 1868))
 						{
 							float num3 = 12f;
 							Vector2 vector = new Vector2(Main.item[j].position.X + (float)(Main.item[j].width / 2), Main.item[j].position.Y + (float)(Main.item[j].height / 2));
@@ -23150,7 +23215,7 @@
 		{
 			int num = 4;
 			int num2 = 3;
-			for (int i = 0; i < 419; i++)
+			for (int i = 0; i < this.adjTile.Length; i++)
 			{
 				this.oldAdjTile[i] = this.adjTile[i];
 				this.adjTile[i] = false;
@@ -23198,6 +23263,7 @@
 							this.adjTile[14] = true;
 							this.alchemyTable = true;
 						}
+						TileLoader.AdjTiles(this, Main.tile[j, k].type);
 					}
 					if (Main.tile[j, k].liquid > 200 && Main.tile[j, k].liquidType() == 0)
 					{
@@ -23467,6 +23533,7 @@
 			{
 				this.boneArmor = true;
 			}
+			ItemLoader.PreUpdateVanitySet(this);
 			if (this.wings > 0)
 			{
 				this.back = -1;
@@ -23623,6 +23690,7 @@
 					}
 				}
 			}
+			ItemLoader.UpdateVanitySet(this);
 			this.bodyFrame.Width = 40;
 			this.bodyFrame.Height = 56;
 			this.legFrame.Width = 40;
@@ -23843,6 +23911,10 @@
 							}
 						}
 					}
+					else if (ItemLoader.UseItemFrame(this.inventory[this.selectedItem], this))
+					{
+						return;
+					}
 				}
 			}
 			else
@@ -23878,6 +23950,10 @@
 					if (this.inventory[this.selectedItem].holdStyle == 3)
 					{
 						this.bodyFrame.Y = this.bodyFrame.Height * 3;
+						return;
+					}
+					if (ItemLoader.HoldItemFrame(this.inventory[this.selectedItem], this))
+					{
 						return;
 					}
 					if (this.grappling[0] >= 0)
@@ -25596,7 +25672,10 @@
 					bool flag3 = false;
 					bool flag4 = false;
 					TileObject tileObject = default(TileObject);
-					if (TileObjectData.CustomPlace(this.inventory[this.selectedItem].createTile, this.inventory[this.selectedItem].placeStyle) && this.inventory[this.selectedItem].createTile != 82)
+					if (!TileLoader.CanPlace(Player.tileTargetX, Player.tileTargetY))
+					{
+					}
+					else if (TileObjectData.CustomPlace(this.inventory[this.selectedItem].createTile, this.inventory[this.selectedItem].placeStyle) && this.inventory[this.selectedItem].createTile != 82)
 					{
 						flag4 = true;
 						flag3 = TileObject.CanPlace(Player.tileTargetX, Player.tileTargetY, (int)((ushort)this.inventory[this.selectedItem].createTile), this.inventory[this.selectedItem].placeStyle, this.direction, out tileObject, false);
@@ -25649,7 +25728,7 @@
 								{
 									if (!WorldGen.SolidTileNoAttach(Player.tileTargetX, Player.tileTargetY + 1) && (Main.tile[Player.tileTargetX, Player.tileTargetY + 1].halfBrick() || Main.tile[Player.tileTargetX, Player.tileTargetY + 1].slope() != 0))
 									{
-										if (Main.tile[Player.tileTargetX, Player.tileTargetY + 1].type != 19)
+										if (!TileLoader.IsPlatform(Main.tile[Player.tileTargetX, Player.tileTargetY + 1].type))
 										{
 											WorldGen.SlopeTile(Player.tileTargetX, Player.tileTargetY + 1, 0);
 											if (Main.netMode == 1)
@@ -25660,7 +25739,7 @@
 									}
 									else if (!WorldGen.SolidTileNoAttach(Player.tileTargetX, Player.tileTargetY + 1) && !WorldGen.SolidTileNoAttach(Player.tileTargetX - 1, Player.tileTargetY) && (Main.tile[Player.tileTargetX - 1, Player.tileTargetY].halfBrick() || Main.tile[Player.tileTargetX - 1, Player.tileTargetY].slope() != 0))
 									{
-										if (Main.tile[Player.tileTargetX, Player.tileTargetY + 1].type != 19)
+										if (!TileLoader.IsPlatform(Main.tile[Player.tileTargetX, Player.tileTargetY + 1].type))
 										{
 											WorldGen.SlopeTile(Player.tileTargetX - 1, Player.tileTargetY, 0);
 											if (Main.netMode == 1)
@@ -25669,7 +25748,7 @@
 											}
 										}
 									}
-									else if (!WorldGen.SolidTileNoAttach(Player.tileTargetX, Player.tileTargetY + 1) && !WorldGen.SolidTileNoAttach(Player.tileTargetX - 1, Player.tileTargetY) && !WorldGen.SolidTileNoAttach(Player.tileTargetX + 1, Player.tileTargetY) && (Main.tile[Player.tileTargetX + 1, Player.tileTargetY].halfBrick() || Main.tile[Player.tileTargetX + 1, Player.tileTargetY].slope() != 0) && Main.tile[Player.tileTargetX, Player.tileTargetY + 1].type != 19)
+									else if (!WorldGen.SolidTileNoAttach(Player.tileTargetX, Player.tileTargetY + 1) && !WorldGen.SolidTileNoAttach(Player.tileTargetX - 1, Player.tileTargetY) && !WorldGen.SolidTileNoAttach(Player.tileTargetX + 1, Player.tileTargetY) && (Main.tile[Player.tileTargetX + 1, Player.tileTargetY].halfBrick() || Main.tile[Player.tileTargetX + 1, Player.tileTargetY].slope() != 0) && !TileLoader.IsPlatform(Main.tile[Player.tileTargetX, Player.tileTargetY + 1].type))
 									{
 										WorldGen.SlopeTile(Player.tileTargetX + 1, Player.tileTargetY, 0);
 										if (Main.netMode == 1)
@@ -25717,7 +25796,7 @@
 								{
 									num44 = -1;
 								}
-								if (num38 >= 0 && Main.tileSolid[num38] && (!Main.tileNoAttach[num38] || num38 == 19))
+								if (num38 >= 0 && Main.tileSolid[num38] && (!Main.tileNoAttach[num38] || TileLoader.IsPlatform(num38)))
 								{
 									flag3 = true;
 								}
@@ -25851,7 +25930,7 @@
 								flag3 = false;
 							}
 						}
-						if (!flag3 && this.inventory[this.selectedItem].createTile == 19)
+						if (!flag3 && TileLoader.IsPlatform(this.inventory[this.selectedItem].createTile))
 						{
 							for (int num49 = Player.tileTargetX - 1; num49 <= Player.tileTargetX + 1; num49++)
 							{
@@ -26026,7 +26105,7 @@
 									NetMessage.SendTileSquare(-1, Player.tileTargetX, Player.tileTargetY, 1);
 								}
 							}
-							if (this.inventory[this.selectedItem].createTile == 19 && Main.smartDigEnabled)
+							if (TileLoader.IsPlatform(this.inventory[this.selectedItem].createTile) && Main.smartDigEnabled)
 							{
 								int num58 = Player.tileTargetX;
 								int num59 = Player.tileTargetY;
@@ -26038,7 +26117,7 @@
 								{
 									for (int num64 = -1; num64 < 2; num64++)
 									{
-										if ((num63 != 0 || num64 != 0) && Main.tile[num58 + num63, num59 + num64].type == 19)
+										if ((num63 != 0 || num64 != 0) && TileLoader.IsPlatform(Main.tile[num58 + num63, num59 + num64].type))
 										{
 											flag7 = false;
 										}
@@ -26047,22 +26126,22 @@
 								if (!flag7)
 								{
 									Tile tile6 = Main.tile[num58 - 1, num59 - 1];
-									if (tile6.active() && tile6.type == 19 && tile6.slope() != 2)
+									if (tile6.active() && TileLoader.IsPlatform(tile6.type) && tile6.slope() != 2)
 									{
 										num61++;
 									}
 									tile6 = Main.tile[num58 - 1, num59 + 1];
-									if (tile6.active() && tile6.type == 19 && tile6.slope() != 1)
+									if (tile6.active() && TileLoader.IsPlatform(tile6.type) && tile6.slope() != 1)
 									{
 										num62++;
 									}
 									tile6 = Main.tile[num58 + 1, num59 - 1];
-									if (tile6.active() && tile6.type == 19 && tile6.slope() != 1)
+									if (tile6.active() && TileLoader.IsPlatform(tile6.type) && tile6.slope() != 1)
 									{
 										num62++;
 									}
 									tile6 = Main.tile[num58 + 1, num59 + 1];
-									if (tile6.active() && tile6.type == 19 && tile6.slope() != 2)
+									if (tile6.active() && TileLoader.IsPlatform(tile6.type) && tile6.slope() != 2)
 									{
 										num61++;
 									}
@@ -26070,7 +26149,7 @@
 									if (WorldGen.SolidTile(tile6))
 									{
 										num61++;
-										if (tile6.type == 19 && tile6.slope() == 0)
+										if (TileLoader.IsPlatform(tile6.type) && tile6.slope() == 0)
 										{
 											num61++;
 										}
@@ -26079,7 +26158,7 @@
 									if (WorldGen.SolidTile(tile6))
 									{
 										num62++;
-										if (tile6.type == 19 && tile6.slope() == 0)
+										if (TileLoader.IsPlatform(tile6.type) && tile6.slope() == 0)
 										{
 											num62++;
 										}
@@ -26093,12 +26172,12 @@
 										num60 = 2;
 									}
 									tile6 = Main.tile[num58 - 1, num59];
-									if (tile6.active() && tile6.type == 19)
+									if (tile6.active() && TileLoader.IsPlatform(tile6.type))
 									{
 										num60 = 0;
 									}
 									tile6 = Main.tile[num58 + 1, num59];
-									if (tile6.active() && tile6.type == 19)
+									if (tile6.active() && TileLoader.IsPlatform(tile6.type))
 									{
 										num60 = 0;
 									}
@@ -26123,7 +26202,7 @@
 											num67 = -1;
 										}
 										tile6 = Main.tile[num58 + num66, num59 + num67];
-										if (tile6.active() && tile6.type == 19 && tile6.slope() == 0 && (!Main.tile[num58 + num66 + num66, num59 + num67].active() || Main.tile[num58 + num66 + num66, num59 + num67].type != 19 || !Main.tile[num58 + num66 + num66, num59 + num67].halfBrick()))
+										if (tile6.active() && TileLoader.IsPlatform(tile6.type) && tile6.slope() == 0 && (!Main.tile[num58 + num66 + num66, num59 + num67].active() || !TileLoader.IsPlatform(Main.tile[num58 + num66 + num66, num59 + num67].type) || !Main.tile[num58 + num66 + num66, num59 + num67].halfBrick()))
 										{
 											WorldGen.SlopeTile(num58 + num66, num59 + num67, num60);
 											num65 = (int)tile6.slope();
@@ -26143,7 +26222,7 @@
 											num67 = 1;
 										}
 										tile6 = Main.tile[num58 + num66, num59 + num67];
-										if (tile6.active() && tile6.type == 19 && tile6.slope() == 0 && WorldGen.PlatformProperSides(num58 + num66, num59 + num67, true) <= 0)
+										if (tile6.active() && TileLoader.IsPlatform(tile6.type) && tile6.slope() == 0 && WorldGen.PlatformProperSides(num58 + num66, num59 + num67, true) <= 0)
 										{
 											WorldGen.SlopeTile(num58 + num66, num59 + num67, num60);
 											num65 = (int)tile6.slope();
@@ -26157,16 +26236,16 @@
 									{
 										int num66 = -1;
 										tile6 = Main.tile[num58 + num66, num59];
-										if (tile6.active() && tile6.type == 19 && tile6.slope() != 0)
+										if (tile6.active() && TileLoader.IsPlatform(tile6.type) && tile6.slope() != 0)
 										{
 											int num68 = (tile6.slope() == 1).ToDirectionInt() * num66;
 											num60 = (int)((num68 == -1) ? 0 : tile6.slope());
 											bool flag8 = true;
-											if (Main.tile[num58 + num66 * 2, num59 + num68].active() && Main.tile[num58 + num66 * 2, num59].type == 19 && num60 == (int)Main.tile[num58 + num66 * 2, num59 + num68].slope())
+											if (Main.tile[num58 + num66 * 2, num59 + num68].active() && TileLoader.IsPlatform(Main.tile[num58 + num66 * 2, num59].type) && num60 == (int)Main.tile[num58 + num66 * 2, num59 + num68].slope())
 											{
 												flag8 = false;
 											}
-											if (Main.tile[num58, num59 - num68].active() && Main.tile[num58, num59 - num68].type == 19 && tile6.slope() == Main.tile[num58, num59 - num68].slope())
+											if (Main.tile[num58, num59 - num68].active() && TileLoader.IsPlatform(Main.tile[num58, num59 - num68].type) && tile6.slope() == Main.tile[num58, num59 - num68].slope())
 											{
 												flag8 = false;
 											}
@@ -26183,16 +26262,16 @@
 										num66 = 1;
 										int num67 = 0;
 										tile6 = Main.tile[num58 + num66, num59 + num67];
-										if (tile6.active() && tile6.type == 19 && tile6.slope() != 0)
+										if (tile6.active() && TileLoader.IsPlatform(tile6.type) && tile6.slope() != 0)
 										{
 											int num70 = (tile6.slope() == 1).ToDirectionInt() * num66;
 											num60 = (int)((num70 == -1) ? 0 : tile6.slope());
 											bool flag9 = true;
-											if (Main.tile[num58 + num66 * 2, num59 + num70].active() && Main.tile[num58 + num66 * 2, num59].type == 19 && num60 == (int)Main.tile[num58 + num66 * 2, num59 + num70].slope())
+											if (Main.tile[num58 + num66 * 2, num59 + num70].active() && TileLoader.IsPlatform(Main.tile[num58 + num66 * 2, num59].type) && num60 == (int)Main.tile[num58 + num66 * 2, num59 + num70].slope())
 											{
 												flag9 = false;
 											}
-											if (Main.tile[num58, num59 - num70].active() && Main.tile[num58, num59 - num70].type == 19 && tile6.slope() == Main.tile[num58, num59 - num70].slope())
+											if (Main.tile[num58, num59 - num70].active() && TileLoader.IsPlatform(Main.tile[num58, num59 - num70].type) && tile6.slope() == Main.tile[num58, num59 - num70].slope())
 											{
 												flag9 = false;
 											}
@@ -26223,11 +26302,11 @@
 									}
 								}
 							}
-							if (Main.tileSolid[this.inventory[this.selectedItem].createTile] && this.inventory[this.selectedItem].createTile != 19)
+							if (Main.tileSolid[this.inventory[this.selectedItem].createTile] && !TileLoader.IsPlatform(this.inventory[this.selectedItem].createTile))
 							{
 								int num71 = Player.tileTargetX;
 								int num72 = Player.tileTargetY + 1;
-								if (Main.tile[num71, num72] != null && Main.tile[num71, num72].type != 19 && (Main.tile[num71, num72].topSlope() || Main.tile[num71, num72].halfBrick()))
+								if (Main.tile[num71, num72] != null && !TileLoader.IsPlatform(Main.tile[num71, num72].type) && (Main.tile[num71, num72].topSlope() || Main.tile[num71, num72].halfBrick()))
 								{
 									WorldGen.SlopeTile(num71, num72, 0);
 									if (Main.netMode == 1)
@@ -26237,7 +26316,7 @@
 								}
 								num71 = Player.tileTargetX;
 								num72 = Player.tileTargetY - 1;
-								if (Main.tile[num71, num72] != null && Main.tile[num71, num72].type != 19 && Main.tile[num71, num72].bottomSlope())
+								if (Main.tile[num71, num72] != null && !TileLoader.IsPlatform(Main.tile[num71, num72].type) && Main.tile[num71, num72].bottomSlope())
 								{
 									WorldGen.SlopeTile(num71, num72, 0);
 									if (Main.netMode == 1)
@@ -26476,7 +26555,7 @@
 			int num2 = 25;
 			int num3 = 50;
 			int num4 = -1;
-			if (extractType == 1)
+			if (extractType == 3347)
 			{
 				num /= 3;
 				num2 *= 2;
@@ -26484,7 +26563,12 @@
 				num4 = 10;
 			}
 			int num5 = 1;
-			int num6;
+			int num6 = 0;
+			ItemLoader.ExtractinatorUse(ref num6, ref num5, extractType);
+			if (num6 != 0)
+			{
+				goto endVanillaExtractinatorUse;
+			}
 			if (num4 != -1 && Main.rand.Next(num4) == 0)
 			{
 				num6 = 3380;
@@ -26807,6 +26891,7 @@
 					num5 += Main.rand.Next(0, 6);
 				}
 			}
+			endVanillaExtractinatorUse:
 			if (num6 > 0)
 			{
 				Vector2 vector = Main.ReverseGravitySupport(Main.MouseScreen, 0f) + Main.screenPosition;
@@ -27320,7 +27405,7 @@
 				{
 					this.altFunctionUse = 2;
 				}
-				bool flag2 = true;
+				bool flag2 = ItemLoader.CanUseItem(item, this);
 				if (item.shoot == 0)
 				{
 					this.itemRotation = 0f;
@@ -27898,7 +27983,7 @@
 						Main.PlaySound(2, (int)this.position.X, (int)this.position.Y, item.useSound);
 					}
 				}
-				if (flag2 && this.whoAmI == Main.myPlayer && item.shoot >= 0 && item.shoot < 651 && (ProjectileID.Sets.LightPet[item.shoot] || Main.projPet[item.shoot]))
+				if (flag2 && this.whoAmI == Main.myPlayer && item.shoot >= 0 && (ProjectileID.Sets.LightPet[item.shoot] || Main.projPet[item.shoot]))
 				{
 					if (ProjectileID.Sets.MinionSacrificable[item.shoot])
 					{
@@ -28282,6 +28367,7 @@
 							this.itemLocation.Y = this.MountedCenter.Y - (float)Main.itemTexture[item.type].Height * 0.5f;
 						}
 					}
+					ItemLoader.UseStyle(item, this);
 				}
 			}
 			else if (item.holdStyle == 1 && !this.pulley)
@@ -28478,6 +28564,7 @@
 				this.itemLocation.Y = this.MountedCenter.Y - (float)Main.itemTexture[item.type].Height * 0.5f;
 				this.itemRotation = 0f;
 			}
+			ItemLoader.HoldStyle(item, this);
 			if ((((item.type == 974 || item.type == 8 || item.type == 1245 || item.type == 2274 || item.type == 3004 || item.type == 3045 || item.type == 3114 || (item.type >= 427 && item.type <= 433)) && !this.wet) || item.type == 523 || item.type == 1333) && !this.pulley)
 			{
 				float num50 = 1f;
@@ -28923,6 +29010,7 @@
 					Lighting.AddLight(position16, 1f, 0.6f, 0.85f);
 				}
 			}
+			ItemLoader.HoldItem(item, this);
 			if (this.controlUseItem)
 			{
 				this.releaseUseItem = false;
@@ -30112,7 +30200,7 @@
 							}
 							Projectile.NewProjectile(vector2.X, vector2.Y - this.gravDir * 4f, num202, num203, num71, num73, num74, i, 0f, (float)Main.rand.Next(12) / 6f);
 						}
-						else
+						else if (ItemLoader.Shoot(item, this, ref vector2, ref num78, ref num79, ref num71, ref num73, ref num74))
 						{
 							int num204 = Projectile.NewProjectile(vector2.X, vector2.Y, num78, num79, num71, num73, num74, i, 0f, 0f);
 							if (item.type == 726)
@@ -30481,7 +30569,7 @@
 								flag14 = false;
 								if (item.hammer > 0)
 								{
-									num222 += item.hammer;
+									TileLoader.MineDamage(item.hammer, ref num222);
 									if (!WorldGen.CanKillTile(Player.tileTargetX, Player.tileTargetY))
 									{
 										num222 = 0;
@@ -30525,7 +30613,7 @@
 								}
 								else
 								{
-									num222 += item.axe;
+									TileLoader.MineDamage(item.axe, ref num222);
 								}
 								if (item.axe > 0)
 								{
@@ -30589,7 +30677,10 @@
 									{
 										int num223 = Player.tileTargetX;
 										int num224 = Player.tileTargetY;
-										if (Main.tile[num223, num224].type == 19)
+										if (TileLoader.Slope(num223, num224, Main.tile[num223, num224].type))
+										{
+										}
+										else if (TileLoader.IsPlatform(Main.tile[num223, num224].type))
 										{
 											if (Main.tile[num223, num224].halfBrick())
 											{
@@ -30603,7 +30694,7 @@
 											{
 												int num225 = 1;
 												int slope = 2;
-												if (Main.tile[num223 + 1, num224 - 1].type == 19 || Main.tile[num223 - 1, num224 + 1].type == 19 || (WorldGen.SolidTile(num223 + 1, num224) && !WorldGen.SolidTile(num223 - 1, num224)))
+												if (TileLoader.IsPlatform(Main.tile[num223 + 1, num224 - 1].type) || TileLoader.IsPlatform(Main.tile[num223 - 1, num224 + 1].type) || (WorldGen.SolidTile(num223 + 1, num224) && !WorldGen.SolidTile(num223 - 1, num224)))
 												{
 													num225 = 2;
 													slope = 1;
@@ -31059,6 +31150,7 @@
 						r2.Height = (int)((double)r2.Height * 0.6);
 					}
 				}
+				ItemLoader.UseItemHitbox(item, this, ref r2, ref flag17);
 				float arg_BA93_0 = this.gravDir;
 				if (item.type == 1450 && Main.rand.Next(3) == 0)
 				{
@@ -31418,6 +31510,7 @@
 						Dust expr_D7D2_cp_0 = Main.dust[num280];
 						expr_D7D2_cp_0.velocity.Y = expr_D7D2_cp_0.velocity.Y * 2f;
 					}
+					ItemLoader.MeleeEffects(item, this, r2);
 					if (Main.myPlayer == i && (item.type == 1991 || item.type == 3183))
 					{
 						for (int num281 = 0; num281 < 200; num281++)
@@ -31533,7 +31626,18 @@
 								{
 									if (!Main.npc[num292].dontTakeDamage)
 									{
-										if (!Main.npc[num292].friendly || (Main.npc[num292].type == 22 && this.killGuide) || (Main.npc[num292].type == 54 && this.killClothier))
+										bool? modCanHit = ItemLoader.CanHitNPC(item, this, Main.npc[num292]);
+										if (modCanHit.HasValue && !modCanHit.Value)
+										{
+											continue;
+										}
+										bool? modCanBeHit = NPCLoader.CanBeHitByItem(Main.npc[num292], this, item);
+										if (modCanBeHit.HasValue && !modCanBeHit.Value)
+										{
+											continue;
+										}
+										bool canHitFlag = (modCanHit.HasValue && modCanHit.Value) || (modCanBeHit.HasValue && modCanBeHit.Value);
+										if (!Main.npc[num292].friendly || (Main.npc[num292].type == 22 && this.killGuide) || (Main.npc[num292].type == 54 && this.killClothier) || canHitFlag)
 										{
 											Rectangle value12 = new Rectangle((int)Main.npc[num292].position.X, (int)Main.npc[num292].position.Y, Main.npc[num292].width, Main.npc[num292].height);
 											if (r2.Intersects(value12) && (Main.npc[num292].noTileCollide || Collision.CanHit(this.position, this.width, this.height, Main.npc[num292].position, Main.npc[num292].width, Main.npc[num292].height)))
@@ -31556,6 +31660,8 @@
 													}
 												}
 												int num294 = Main.DamageVar((float)num282);
+												ItemLoader.ModifyHitNPC(item, this, Main.npc[num292], ref num294, ref num283, ref flag18);
+												NPCLoader.ModifyHitByItem(Main.npc[num292], this, item, ref num294, ref num283, ref flag18);
 												this.StatusNPC(item.type, num292);
 												this.OnHit(Main.npc[num292].Center.X, Main.npc[num292].Center.Y, Main.npc[num292]);
 												if (this.armorPenetration > 0)
@@ -31630,6 +31736,8 @@
 														NetMessage.SendData(21, -1, -1, "", num300, 0f, 0f, 0f, 0, 0, 0);
 													}
 												}
+												ItemLoader.OnHitNPC(item, this, Main.npc[num292], num295, num283, flag18);
+												NPCLoader.OnHitByItem(Main.npc[num292], this, item, num295, num283, flag18);
 												int num301 = Item.NPCtoBanner(Main.npc[num292].BannerID());
 												if (num301 >= 0)
 												{
@@ -31674,7 +31782,7 @@
 									if (num302 != i && Main.player[num302].active && Main.player[num302].hostile && !Main.player[num302].immune && !Main.player[num302].dead && (Main.player[i].team == 0 || Main.player[i].team != Main.player[num302].team))
 									{
 										Rectangle value16 = new Rectangle((int)Main.player[num302].position.X, (int)Main.player[num302].position.Y, Main.player[num302].width, Main.player[num302].height);
-										if (r2.Intersects(value16) && Collision.CanHit(this.position, this.width, this.height, Main.player[num302].position, Main.player[num302].width, Main.player[num302].height))
+										if (ItemLoader.CanHitPvp(item, this, Main.player[num302]) && r2.Intersects(value16) && Collision.CanHit(this.position, this.width, this.height, Main.player[num302].position, Main.player[num302].width, Main.player[num302].height))
 										{
 											bool flag20 = false;
 											if (Main.rand.Next(1, 101) <= 10)
@@ -31682,6 +31790,7 @@
 												flag20 = true;
 											}
 											int num303 = Main.DamageVar((float)num282);
+											ItemLoader.ModifyHitPvp(item, this, Main.player[num302], ref num282, ref flag20);
 											this.StatusPvP(item.type, num302);
 											this.OnHit(Main.player[num302].Center.X, Main.player[num302].Center.Y, Main.player[num302]);
 											int num304 = (int)Main.player[num302].Hurt(num303, this.direction, true, false, "", flag20, -1);
@@ -31731,6 +31840,7 @@
 											{
 												this.pumpkinSword(num302, (int)((double)num282 * 1.5), num283);
 											}
+											ItemLoader.OnHitPvp(item, this, Main.player[num302], num304, flag20);
 											if (Main.netMode != 0)
 											{
 												if (flag20)
@@ -31812,6 +31922,7 @@
 			}
 			if (this.itemTime == 0 && this.itemAnimation > 0)
 			{
+				ItemLoader.UseItem(item, this);
 				if (item.hairDye >= 0)
 				{
 					this.itemTime = item.useTime;
@@ -32325,6 +32436,7 @@
 					{
 						flag22 = true;
 					}
+					ItemLoader.ConsumeItem(item, this, ref flag22);
 					if (flag22)
 					{
 						if (item.stack > 0)
@@ -32649,6 +32761,10 @@
 				{
 					flag2 = true;
 				}
+				if (!ItemLoader.ConsumeAmmo(sItem, item, this))
+				{
+					flag2 = true;
+				}
 				if (!flag2 && item.consumable)
 				{
 					item.stack--;
@@ -32701,7 +32817,7 @@
 			}
 			else
 			{
-				num += pickPower;
+				TileLoader.MineDamage(pickPower, ref num);
 			}
 			if (tile.type == 211 && pickPower < 200)
 			{
@@ -32769,6 +32885,10 @@
 			else if (tile.type == 223 && pickPower < 150)
 			{
 				num = 0;
+			}
+			else
+			{
+				TileLoader.PickPowerCheck(tile, pickPower, ref num);
 			}
 			if (tile.type == 147 || tile.type == 0 || tile.type == 40 || tile.type == 53 || tile.type == 57 || tile.type == 59 || tile.type == 123 || tile.type == 224 || tile.type == 397)
 			{
@@ -33377,7 +33497,7 @@
 			{
 				return false;
 			}
-			if (!Main.tile[x, y - 1].active() || Main.tile[x, y - 1].type != 79)
+			if (!Main.tile[x, y - 1].active() || (Main.tile[x, y - 1].type != 79 && !TileLoader.IsModBed(Main.tile[x, y - 1].type)))
 			{
 				return false;
 			}
@@ -33586,12 +33706,12 @@
 							{
 								player.armor[k].name = "";
 							}
-							binaryWriter.Write(player.armor[k].netID);
+							ItemIO.WriteVanillaID(player.armor[k], binaryWriter);
 							binaryWriter.Write(player.armor[k].prefix);
 						}
 						for (int l = 0; l < player.dye.Length; l++)
 						{
-							binaryWriter.Write(player.dye[l].netID);
+							ItemIO.WriteVanillaID(player.dye[l], binaryWriter);
 							binaryWriter.Write(player.dye[l].prefix);
 						}
 						for (int m = 0; m < 58; m++)
@@ -33600,16 +33720,16 @@
 							{
 								player.inventory[m].name = "";
 							}
-							binaryWriter.Write(player.inventory[m].netID);
+							ItemIO.WriteVanillaID(player.inventory[m], binaryWriter);
 							binaryWriter.Write(player.inventory[m].stack);
 							binaryWriter.Write(player.inventory[m].prefix);
 							binaryWriter.Write(player.inventory[m].favorited);
 						}
 						for (int n = 0; n < player.miscEquips.Length; n++)
 						{
-							binaryWriter.Write(player.miscEquips[n].netID);
+							ItemIO.WriteVanillaID(player.miscEquips[n], binaryWriter);
 							binaryWriter.Write(player.miscEquips[n].prefix);
-							binaryWriter.Write(player.miscDyes[n].netID);
+							ItemIO.WriteVanillaID(player.miscDyes[n], binaryWriter);
 							binaryWriter.Write(player.miscDyes[n].prefix);
 						}
 						for (int num = 0; num < 40; num++)
@@ -33618,7 +33738,7 @@
 							{
 								player.bank.item[num].name = "";
 							}
-							binaryWriter.Write(player.bank.item[num].netID);
+							ItemIO.WriteVanillaID(player.bank.item[num], binaryWriter);
 							binaryWriter.Write(player.bank.item[num].stack);
 							binaryWriter.Write(player.bank.item[num].prefix);
 						}
@@ -33628,7 +33748,7 @@
 							{
 								player.bank2.item[num2].name = "";
 							}
-							binaryWriter.Write(player.bank2.item[num2].netID);
+							ItemIO.WriteVanillaID(player.bank2.item[num2], binaryWriter);
 							binaryWriter.Write(player.bank2.item[num2].stack);
 							binaryWriter.Write(player.bank2.item[num2].prefix);
 						}
@@ -33673,6 +33793,7 @@
 					}
 				}
 			}
+			PlayerIO.WriteModFile(player, path, isCloudSave);
 		}
 
 		public static PlayerFileData LoadPlayer(string playerPath, bool cloudSave)
@@ -34116,6 +34237,7 @@
 								player.anglerQuestsFinished = binaryReader.ReadInt32();
 							}
 							player.skinVariant = (int)MathHelper.Clamp((float)player.skinVariant, 0f, 7f);
+							PlayerIO.ReadModFile(player, playerPath, cloudSave);
 							for (int num32 = 3; num32 < 8 + player.extraAccessorySlots; num32++)
 							{
 								int type = player.armor[num32].type;
@@ -34184,6 +34306,7 @@
 					if (FileUtilities.Exists(file + ".bak", cloudSave))
 					{
 						FileUtilities.Move(file + ".bak", file, cloudSave, true);
+						PlayerIO.LoadBackup(file, cloudSave);
 					}
 					playerFileData = Player.LoadPlayer(file, cloudSave);
 					if (playerFileData.Player == null)
@@ -34250,8 +34373,16 @@
 			return -1;
 		}
 
+		internal IList<ModPlayer> players = new List<ModPlayer>();
+
+		public ModPlayer GetModPlayer(Mod mod, string name)
+		{
+			return PlayerHooks.GetModPlayer(this, mod, name);
+		}
+
 		public Player()
 		{
+			PlayerHooks.SetupPlayer(this);
 			int[] array = new int[2];
 			this.hurtCooldowns = array;
 			this.width = 20;

