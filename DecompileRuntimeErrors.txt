Terraria.ID.SetFactory
public T[] CreateCustomSet<T>(T defaultState, params object[] inputs)
- array[(int)((short)inputs[j])] = (T)((object)inputs[j + 1]);
+ array[(int)inputs[j]] = (T)((object)inputs[j + 1]);

Terraria.IO.WorldFile
private static int SaveWorldHeader(BinaryWriter writer)
- writer.Write(540); //number of NPCs, will likely change
+ writer.Write((short)540);
private static int SaveChests(BinaryWriter writer)
- writer.Write(40);
+ writer.Write((short)40);
- writer.Write(0);
+ writer.Write((short)0);

Terraria.Map.MapHelper
public static void SaveMap()
- binaryWriter.Write(419); //number of tiles, will likely change
- binaryWriter.Write(225); //number of walls, will likely change
- binaryWriter.Write(3);
- binaryWriter.Write(256);
- binaryWriter.Write(256);
- binaryWriter.Write(256);
+ binaryWriter.Write((short)419);
+ binaryWriter.Write((short)225);
+ binaryWriter.Write((short)3);
+ binaryWriter.Write((short)256);
+ binaryWriter.Write((short)256);
+ binaryWriter.Write((short)256);

Terraria.Net.NetModule
protected static NetPacket CreatePacket<T>(int size) where T : NetModule
- result.Writer.Write(82);
+ result.Writer.Write((byte)82);

Terraria.Social.Steam.NetServerSocialModule
private void BroadcastConnectedUsers()
- binaryWriter.Write(1);
+ binaryWriter.Write((byte)1);

Terraria.NetMessage.SendData(...)
case 18:
- writer.Write(Main.dayTime ? 1 : 0);
+ writer.Write((byte)(Main.dayTime ? 1 : 0));
case 19:
- writer.Write((number4 == 1f) ? 1 : 0);
+ writer.Write((byte)((number4 == 1f) ? 1 : 0));